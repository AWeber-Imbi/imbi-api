openapi: 3.0.3
info:
  title: Imbi
  description: Imbi is an operational management platform for medium to large environments.
  license:
    name: BSD 3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  version: '{{ settings["version"] }}'
  contact:
    name: AWeber
    url: 'https://github.com/aweber/imbi'
  x-logo:
    url: /static/images/logo.png
components:
  securitySchemes:
    session:
      type: apiKey
      description: Uses the session cookie of an authenticated user to authenticate each API request
      in: cookie
      name: session
    token:
      type: apiKey
      description: Uses an API key generated for a user to authenticate each API request
      in: header
      name: Private-Token
security:
  - session: []
  - token: []
paths:
  /activity-feed:
    get:
      description: A feed of changes in Imbi's projects ordered in descending order by date
      summary: Activity Feed
      tags:
        - Activity Feed
      parameters:
        - name: limit
          in: query
          description: Limit the number of records returned
          schema:
            type: number
        - name: omit_user
          in: query
          description: Username to omit from the activity feed
          schema:
            type: string
          explode: true
        - name: token
          in: query
          description: Opaque pagination token
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - type: object
                      title: Project-related change
                      properties:
                        type:
                          description: Describes the format of this entry
                          type: string
                          enum:
                            - ProjectFeedEntry
                        display_name:
                          description: The display name of the user who acted on the project
                          type: string
                        email_address:
                          description: The email address of the user who acted on the project
                          type: string
                          format: email
                        namespace:
                          description: The namespace of the project
                          type: string
                        namespace_id:
                          description: The namespace ID
                          type: integer
                        project_id:
                          description: The project ID
                          type: integer
                        project_name:
                          description: The project name
                          type: string
                        project_type:
                          description: The project type
                          type: string
                        what:
                          description: The action taken by the user
                          type: string
                          enum:
                            - created
                            - updated
                            - updated facts
                        when:
                          description: The timestamp of the entry
                          type: string
                          format: date-time
                        who:
                          description: The username of the user who acted on the project
                          type: string
                    - $ref: '#/paths/~1operations-log/get/responses/200/content/application~1json/schema/items'
              examples:
                records:
                  summary: IMBI project changes
                  value:
                    - when: 2021-05-21T20:43:08.639Z
                      type: ProjectFeedEntry
                      namespace: Example
                      namespace_id: 1
                      project_id: 1
                      project_name: Imbi
                      project_type: Web Application
                      who: gmr
                      display_name: Gavin M. Roy
                      email_address: gmr@imbi.co
                      what: updated facts
                    - id: 1
                      when: 2021-05-21T20:41:06.423Z
                      recorded_by: gavinr
                      email_address: gavinr@example.com
                      display_name: Gavin M. Roy
                      type: OperationsLogEntry
                      completed_at: null
                      project_id: 1
                      project_name: Imbi
                      environment: Testing
                      change_type: Deployment
                      description: Added the Operations Log functionality
                      link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                      notes: null
                      ticket_slug: JIRA-32768
                      version: 0.13.0
                    - when: 2021-05-20T20:30:21.987Z
                      type: ProjectFeedEntry
                      namespace: Example
                      namespace_id: 1
                      project_id: 1
                      project_name: Imbi
                      project_type: Web Application
                      who: gmr
                      display_name: Gavin M. Roy
                      email_address: gmr@imbi.co
                      what: created
            application/msgpack:
              schema:
                type: array
                items:
                  oneOf:
                    - type: object
                      title: Project-related change
                      properties:
                        type:
                          description: Describes the format of this entry
                          type: string
                          enum:
                            - ProjectFeedEntry
                        display_name:
                          description: The display name of the user who acted on the project
                          type: string
                        email_address:
                          description: The email address of the user who acted on the project
                          type: string
                          format: email
                        namespace:
                          description: The namespace of the project
                          type: string
                        namespace_id:
                          description: The namespace ID
                          type: integer
                        project_id:
                          description: The project ID
                          type: integer
                        project_name:
                          description: The project name
                          type: string
                        project_type:
                          description: The project type
                          type: string
                        what:
                          description: The action taken by the user
                          type: string
                          enum:
                            - created
                            - updated
                            - updated facts
                        when:
                          description: The timestamp of the entry
                          type: string
                          format: date-time
                        who:
                          description: The username of the user who acted on the project
                          type: string
                    - $ref: '#/paths/~1operations-log/get/responses/200/content/application~1json/schema/items'
              examples:
                records:
                  summary: IMBI project changes
                  value:
                    - when: 2021-05-21T20:43:08.639Z
                      type: ProjectFeedEntry
                      namespace: Example
                      namespace_id: 1
                      project_id: 1
                      project_name: Imbi
                      project_type: Web Application
                      who: gmr
                      display_name: Gavin M. Roy
                      email_address: gmr@imbi.co
                      what: updated facts
                    - id: 1
                      when: 2021-05-21T20:41:06.423Z
                      recorded_by: gavinr
                      email_address: gavinr@example.com
                      display_name: Gavin M. Roy
                      type: OperationsLogEntry
                      completed_at: null
                      project_id: 1
                      project_name: Imbi
                      environment: Testing
                      change_type: Deployment
                      description: Added the Operations Log functionality
                      link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                      notes: null
                      ticket_slug: JIRA-32768
                      version: 0.13.0
                    - when: 2021-05-20T20:30:21.987Z
                      type: ProjectFeedEntry
                      namespace: Example
                      namespace_id: 1
                      project_id: 1
                      project_name: Imbi
                      project_type: Web Application
                      who: gmr
                      display_name: Gavin M. Roy
                      email_address: gmr@imbi.co
                      what: created
          headers:
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  /authentication-tokens:
    post:
      summary: Create Token
      description: Create a new authentication token for the API
      tags:
        - User
      requestBody:
        description: The configuration system record to create
        content:
          application/json:
            schema:
              title: Authentication Token
              description: Configuration Management or Storage System
              type: object
              properties:
                name:
                  description: The name of the token provided by the user
                  type: string
              required:
                - name
              additionalProperties: false
            examples:
              record:
                summary: New token
                value:
                  name: Test Integration
          application/msgpack:
            schema:
              $ref: '#/paths/~1authentication-tokens/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: New token
                value:
                  name: Test Integration
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Authentication Token
                description: Configuration Management or Storage System
                type: object
                properties:
                  name:
                    description: The name of the token provided by the user
                    type: string
                  username:
                    description: The username that owns the token
                    type: string
                  token:
                    description: The authentication token value
                    type: string
                    format: uuid
                  created_at:
                    description: The timestamp indicating when the token was created
                    type: string
                    format: iso8601-timestamp
                  expires_at:
                    description: The timestamp indicating when the token expires
                    type: string
                    format: iso8601-timestamp
                  last_used_at:
                    description: The timestamp indicating when the token was last used
                    type: string
                    format: iso8601-timestamp
                    nullable: true
                additionalProperties: false
              examples:
                records:
                  summary: The newly created authentication token
                  value:
                    name: Test Integration
                    username: ffink
                    token: 017778b5-188e-c3ac-7aa6-76e41e116a95
                    created_at: 1964-01-01T19:11:11.000Z
                    expires_at: 1965-01-01T19:11:11.000Z
                    last_used_at: null
            application/msgpack:
              schema:
                $ref: '#/paths/~1authentication-tokens/post/responses/200/content/application~1json/schema'
              examples:
                records:
                  summary: The newly created authentication token
                  value:
                    name: Test Integration
                    username: ffink
                    token: 017778b5-188e-c3ac-7aa6-76e41e116a95
                    created_at: 1964-01-01T19:11:11.000Z
                    expires_at: 1965-01-01T19:11:11.000Z
                    last_used_at: null
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    get:
      description: Retrieve the list of tokens for the current authenticated user
      summary: Get Tokens
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1authentication-tokens/post/responses/200/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple authentication tokens
                  value:
                    - name: Test Integration
                      username: ffink
                      token: 017778b5-188e-c3ac-7aa6-76e41e116a95
                      created_at: 1964-01-01T19:11:11.000Z
                      expires_at: 1965-01-01T19:11:11.000Z
                      last_used_at: 2021-02-06T20:34:00.000Z
                    - name: Test Integration
                      username: ffink
                      token: 017778b6-94d3-ab49-f9c8-ae5d7fd999bf
                      created_at: 1964-02-28T19:11:11.000Z
                      expires_at: 1965-02-28T19:11:11.000Z
                      last_used_at: null
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1authentication-tokens/post/responses/200/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple authentication tokens
                  value:
                    - name: Test Integration
                      username: ffink
                      token: 017778b5-188e-c3ac-7aa6-76e41e116a95
                      created_at: 1964-01-01T19:11:11.000Z
                      expires_at: 1965-01-01T19:11:11.000Z
                      last_used_at: 2021-02-06T20:34:00.000Z
                    - name: Test Integration
                      username: ffink
                      token: 017778b6-94d3-ab49-f9c8-ae5d7fd999bf
                      created_at: 1964-02-28T19:11:11.000Z
                      expires_at: 1965-02-28T19:11:11.000Z
                      last_used_at: null
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  '/authentication-tokens/{token}':
    delete:
      summary: Delete Token
      description: Remove an authentication token
      tags:
        - User
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
      parameters:
        - name: token
          in: path
          description: Authentication Token
          required: true
          schema:
            type: string
            format: uuid
  /components:
    post:
      summary: Create Component
      description: Create a new component
      tags:
        - Components
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                package_url:
                  description: Unique identifies the component
                  type: string
                  pattern: '^pkg:'
                name:
                  description: Human-readable name of this component
                  type: string
                status:
                  description: Status for *all* versions of this component
                  type: string
                  enum:
                    - Active
                    - Deprecated
                    - Forbidden
                  default: Active
                icon_class:
                  description: Optional Font Awesome icon class
                  type: string
                  nullable: true
                  default: fas fa-save
                active_version:
                  description: |
                    Active version for this component for scoring purposes

                    This is `null` if the version of this component does not affect
                    the total project score. If it starts with a `^` or `~` then it
                    is a semantic version range; otherwise, it is an exact match.
                  type: string
                  nullable: true
                  default: 'null'
                home_page:
                  description: Optional homepage
                  type: string
                  format: uri
                  nullable: true
              required:
                - home_page
                - name
                - package_url
              example:
                package_url: 'pkg:pypi:imbi'
                name: Imbi
                icon_class: imbi imbi
                home_page: 'https://github.com/AWeber-Imbi/imbi'
          application/msgpack:
            schema:
              $ref: '#/paths/~1components/post/requestBody/content/application~1json/schema'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  package_url:
                    description: Unique identifies the component
                    type: string
                    pattern: '^pkg:'
                  name:
                    description: Human-readable name of this component
                    type: string
                  status:
                    description: Status for *all* versions of this component
                    type: string
                    enum:
                      - Active
                      - Deprecated
                      - Forbidden
                    default: Active
                  icon_class:
                    description: Optional Font Awesome icon class
                    type: string
                    nullable: true
                    default: fas fa-save
                  active_version:
                    description: |
                      Active version for this component for scoring purposes

                      This is `null` if the version of this component does not affect
                      the total project score. If it starts with a `^` or `~` then it
                      is a semantic version range; otherwise, it is an exact match.
                    type: string
                    nullable: true
                    default: 'null'
                  home_page:
                    description: Optional homepage
                    type: string
                    format: uri
                    nullable: true
                  created_at:
                    type: string
                    format: date-time
                  created_by:
                    type: string
                  last_modified_at:
                    type: string
                    format: date-time
                    nullable: true
                  last_modified_by:
                    type: string
                    nullable: true
                required:
                  - active_version
                  - created_at
                  - created_by
                  - home_page
                  - icon_class
                  - last_modified_at
                  - last_modified_by
                  - name
                  - package_url
                  - status
                example:
                  package_url: 'pkg:pypi:imbi'
                  name: Imbi
                  status: Active
                  icon_class: imbi imbi
                  active_version: null
                  home_page: 'https://github.com/AWeber-Imbi/imbi'
                  created_at: '2020-11-23T13:42:00-04:00'
                  created_by: gavinr
                  last_modified_at: '2024-05-16T09:45:00-05:00'
                  last_modified_by: dave-shawley
            application/msgpack:
              schema:
                $ref: '#/paths/~1components/post/responses/200/content/application~1json/schema'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '403':
          description: The requested operation cannot be performed by the user
          content:
            application/json:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  summary: '403'
                  value:
                    status: 403
                    type: 'https://imbi.localhost/#forbidden'
                    title: Forbidden
                    detail: fredf(internal) does not have the "admin" permission
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  summary: '403'
                  value:
                    status: 403
                    type: 'https://imbi.localhost/#forbidden'
                    title: Forbidden
                    detail: fredf(internal) does not have the "admin" permission
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    get:
      summary: Retrieve Components
      description: Retrieve the list of know components
      tags:
        - Components
      responses:
        '200':
          description: Page of components
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/paths/~1components/post/responses/200/content/application~1json/schema'
                    - type: object
                      properties:
                        link:
                          type: string
                          format: uri
                          description: Canonical link to this component
                        project_count:
                          type: number
                          description: Number of projects using this component
                        version_count:
                          type: number
                          description: Number of component versions discovered
                      required:
                        - link
                        - project_count
                        - version_count
                      example:
                        link: /components/pkg%3Apypi%3Aimbi
                        project_count: 1
                        version_count: 13
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1components/get/responses/200/content/application~1json/schema/items'
          headers:
            Link:
              description: |
                Links to related resources, in the format defined by
                [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5).  The following
                link relation types are used in this API.

                | "rel" value | Description                                      |
                |:-----------:| -----------                                      |
                | first       | link to the first page in a collection           |
                | next        | link to the next page in the collection          |
                | self        | the canonical URL for the resource if one exists |
              schema:
                type: string
              style: simple
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          description: The requested resource was not found
          content:
            application/json:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  summary: '404'
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 404 Resource not found
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  summary: '404'
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 404 Resource not found
      parameters:
        - name: limit
          in: query
          description: Optional page size
          required: false
          schema:
            type: integer
            minimum: 1
        - name: token
          in: query
          description: |
            Pagination token

            This is returned in the `"next"` link
          required: false
          schema:
            type: string
  '/components/{package_url}':
    parameters:
      - name: package_url
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get Component
      description: Retrieve a specific component by name
      tags:
        - Components
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1components/post/responses/200/content/application~1json/schema'
            application/msgpack:
              schema:
                $ref: '#/paths/~1components/post/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    delete:
      summary: Remove Component
      description: Remove a specific component by name
      tags:
        - Components
      responses:
        '204':
          description: Item deleted
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '403':
          $ref: '#/paths/~1components/post/responses/403'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    patch:
      summary: Update Component
      description: |
        Update a Component with a JSON patch document
      tags:
        - Components
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          description: Component was updated
          content:
            application/json:
              schema:
                $ref: '#/paths/~1components/post/responses/200/content/application~1json/schema'
            application/msgpack:
              schema:
                $ref: '#/paths/~1components/post/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '403':
          $ref: '#/paths/~1components/post/responses/403'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
  /cookie-cutters:
    get:
      description: Retrieve the collection of cookie cutters
      summary: Get Collection
      tags:
        - Cookie Cutters
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple cookie cutter records
                  value:
                    - cookiecutter: buzzops-project
                      project_type_id: 1
                      type: project
                      description: A HTTP API that runs in Kubernetes
                      url: 'https://github.com/aweber/k8s-api-cookiecutter.git'
                    - cookiecutter: buzzops-consumer
                      project_type_id: 2
                      type: project
                      description: A rejected consumer application
                      url: 'https://github.com/aweber/k8s-consumer-cookiecutter.git'
                    - cookiecutter: buzzops-consumer-dashboard
                      project_type_id: 1
                      type: dashboard
                      description: A Grafana dashboard for a rejected consumer application
                      url: 'https://github.com/aweber/grafana-consumer-cookiecutter.git'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple cookie cutter records
                  value:
                    - cookiecutter: buzzops-project
                      project_type_id: 1
                      type: project
                      description: A HTTP API that runs in Kubernetes
                      url: 'https://github.com/aweber/k8s-api-cookiecutter.git'
                    - cookiecutter: buzzops-consumer
                      project_type_id: 2
                      type: project
                      description: A rejected consumer application
                      url: 'https://github.com/aweber/k8s-consumer-cookiecutter.git'
                    - cookiecutter: buzzops-consumer-dashboard
                      project_type_id: 1
                      type: dashboard
                      description: A Grafana dashboard for a rejected consumer application
                      url: 'https://github.com/aweber/grafana-consumer-cookiecutter.git'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new cookie cutter record
      requestBody:
        description: The cookie cutter record to create
        content:
          application/json:
            schema:
              title: Cookie Cutter
              description: Used to describe the cookie cutters available when creating a project
              type: object
              properties:
                name:
                  description: The display name for a cookiecutter
                  type: string
                type:
                  description: The type of cookie cutter
                  type: string
                  enum:
                    - project
                    - dashboard
                project_type_id:
                  description: The project type associated with the cookie cutter
                  type: number
                description:
                  description: A description of the cookie cutter
                  type: string
                  nullable: true
                url:
                  description: The git URL to the cookie cutter
                  type: string
              required:
                - name
                - type
                - project_type_id
                - url
              additionalProperties: false
            examples:
              record:
                summary: A full cookie cutter record
                value:
                  name: k8s-rejected-consumer
                  type: project
                  project_type_id: 1
                  description: A rejected consumer that runs in Kubernetes
                  url: 'https://gitlab.com/aweber/cookiecutters/k8s-rejected-consumer.git'
          application/msgpack:
            schema:
              $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full cookie cutter record
                value:
                  name: k8s-rejected-consumer
                  type: project
                  project_type_id: 1
                  description: A rejected consumer that runs in Kubernetes
                  url: 'https://gitlab.com/aweber/cookiecutters/k8s-rejected-consumer.git'
      tags:
        - Cookie Cutters
      responses:
        '200':
          description: 'The request to create, update, or retrieve the cookie cutter was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/examples/record'
            application/msgpack:
              schema:
                $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/examples/record'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/cookie-cutters/{name}':
    get:
      summary: Get Record
      description: Retrieve a cookie cutter record
      tags:
        - Cookie Cutters
      responses:
        '200':
          $ref: '#/paths/~1cookie-cutters/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: |-
        Update a cookie cutter, providing a JSON Patch (RFC-6209) payload of update
        operations to apply.
      tags:
        - Cookie Cutters
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1cookie-cutters/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a cookie cutter record
      tags:
        - Cookie Cutters
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: name
        in: path
        description: Cookie Cutter Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'
  /environments:
    get:
      description: Retrieve the collection of environments
      summary: Get Collection
      tags:
        - Environments
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1environments/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple environment records
                  value:
                    - name: testing
                      description: |
                        The testing environment reflects the state of HEAD state of the
                        master branch in our Git Repositories for all projects
                      icon_class: fab fa-aws
                    - name: staging
                      description: |
                        The staging environment reflects tagged project releases that are
                        intended to be to deployed to production
                      icon_class: fab fa-aws
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1environments/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple environment records
                  value:
                    - name: testing
                      description: |
                        The testing environment reflects the state of HEAD state of the
                        master branch in our Git Repositories for all projects
                      icon_class: fab fa-aws
                    - name: staging
                      description: |
                        The staging environment reflects tagged project releases that are
                        intended to be to deployed to production
                      icon_class: fab fa-aws
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new environment record
      requestBody:
        description: The environment record to create
        content:
          application/json:
            schema:
              title: Environment
              description: Used to describe the types of project deployment systems
              type: object
              properties:
                name:
                  description: The display name for a environment
                  type: string
                description:
                  description: A description of the environment
                  type: string
                  nullable: true
                icon_class:
                  description: Font Awesome UI icon class
                  type: string
              required:
                - name
                - icon_class
              additionalProperties: false
            examples:
              record:
                summary: A full environment record
                value:
                  name: testing
                  description: |
                    The testing environment reflects the state of HEAD state of the
                    master branch in our Git Repositories for all projects
                  icon_class: fab fa-aws
          application/msgpack:
            schema:
              $ref: '#/paths/~1environments/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full environment record
                value:
                  name: testing
                  description: |
                    The testing environment reflects the state of HEAD state of the
                    master branch in our Git Repositories for all projects
                  icon_class: fab fa-aws
      tags:
        - Environments
      responses:
        '200':
          description: 'The request to create, update, or retrieve the environment was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1environments/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1environments/post/requestBody/content/application~1json/examples/record'
            application/msgpack:
              schema:
                $ref: '#/paths/~1environments/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1environments/post/requestBody/content/application~1json/examples/record'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/environments/{name}':
    get:
      summary: Get Record
      description: Retrieve an environment record
      tags:
        - Environments
      responses:
        '200':
          $ref: '#/paths/~1environments/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update an environment, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Environments
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1environments/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove an environment record
      tags:
        - Environments
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: name
        in: path
        description: Environment Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'
  /gitlab/auth:
    get:
      description: |
        This endpoint is invoked during the GitLab authorization flow for a specific user.
        It exchanges the code for an access/refresh token pair and stores them in the database
        for future use.
      summary: GitLab OAuth 2 callback
      security: []
      tags:
        - Integrations
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: false
          schema:
            type: string
      responses:
        '302':
          description: Redirect back to profile
  /gitlab/namespaces:
    get:
      description: Retrieve GitLab namespaces for the current user
      summary: Available GitLab namespaces
      tags:
        - Integrations
        - User
      responses:
        '200':
          description: List of available namespaces
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Full name of the GitLab namespace
                    id:
                      type: integer
                      description: Unique identifier of the GitLab namespace
  /gitlab/projects:
    get:
      description: Retrieve projects visible to the current user
      summary: Available GitLab projects
      tags:
        - Integrations
        - User
      parameters:
        - name: group_id
          in: query
          description: Unique GitLab group/namespace ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Possibly empty list of projects in the requested namespace
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
                      description: Editable (and optional) description of the repository
                    name:
                      type: string
                      minLength: 1
                      description: Name of the repository
                    id:
                      type: integer
                      description: Unique repository identifier assigned by GitLab
                    web_url:
                      type: string
                      description: URL for the web view of the repository
                  required:
                    - description
                    - name
                    - id
                    - web_url
        '400':
          description: Invalid request -- missing query parameter
        '500':
          description: GitLab integration is not available/configured
  /groups:
    get:
      description: Retrieve the collection of groups
      summary: Get Collection
      tags:
        - Groups
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              description: Provides guidance indicating how the group record should be cached for
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple group records
                  value:
                    - name: Administrators
                      group_type: external
                      external_id: 'cn=admins,ou=users,dc=example,dc=org'
                      permissions:
                        - admin
                        - user
                    - group: Quality Assurance
                      group_type: external
                      external_id: 'cn=qa,ou=users,dc=example,dc=org'
                      permissions:
                        - user
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple group records
                  value:
                    - name: Administrators
                      group_type: external
                      external_id: 'cn=admins,ou=users,dc=example,dc=org'
                      permissions:
                        - admin
                        - user
                    - group: Quality Assurance
                      group_type: external
                      external_id: 'cn=qa,ou=users,dc=example,dc=org'
                      permissions:
                        - user
        '401':
          description: The request could not be authorized using the session cookie or provided API token
          content:
            application/json:
              schema:
                title: Problem Detail
                description: A problem detail document as defined by RFC 7807
                externalDocs:
                  url: 'https://tools.ietf.org/html/rfc7807'
                type: object
                properties:
                  type:
                    description: Machine-readable error type
                    type: string
                    format: url
                  title:
                    description: 'A short, human-readable summary of the problem type.'
                    type: string
                  status:
                    description: |-
                      The HTTP status code generated by the origin server for this
                      occurrence of the problem.
                    type: integer
                  detail:
                    description: |-
                      A human-readable explanation specific to this occurrence of the
                      problem.
                  instance:
                    description: URI that identifies this specific problem occurrence
                    type: string
                    format: url
                additionalProperties: false
              examples:
                problemDetail:
                  summary: '401'
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 401 Unauthorized
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  summary: '401'
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 401 Unauthorized
    post:
      summary: Create Record
      description: Create a new group record
      requestBody:
        description: The group record to create
        content:
          application/json:
            schema:
              title: Group
              description: A organizational group of users in Imbi
              type: object
              properties:
                name:
                  description: The name of a group
                  type: string
                group_type:
                  description: Group type (internal/ldap)
                  type: string
                  enum:
                    - internal
                    - ldap
                external_id:
                  description: The DN for an external ID
                  type: string
                  nullable: true
                permissions:
                  description: Array of permissions to grant members of the group
                  type: array
                  items:
                    type: string
              required:
                - name
                - group_type
              additionalProperties: false
            examples:
              record:
                summary: A full group record
                value:
                  name: Administrators
                  group_type: ldap
                  external_id: 'cn=admins,ou=users,dc=example,dc=org'
                  roles:
                    - admin
                    - user
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full group record
                value:
                  name: Administrators
                  group_type: ldap
                  external_id: 'cn=admins,ou=users,dc=example,dc=org'
                  roles:
                    - admin
                    - user
      tags:
        - Groups
      responses:
        '200':
          description: 'The request to create, update, or retrieve the group was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              description: Indicates when the last modification of the data occurred
              schema:
                type: string
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1groups/post/requestBody/content/application~1json/examples/record'
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1groups/post/requestBody/content/application~1json/examples/record'
        '400':
          description: The request data could not be validated or contained an error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  summary: '400'
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 400 Request Error
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  summary: '400'
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 400 Request Error
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          description: The request could not be completed due to a race condition
          content:
            application/json:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  summary: '409'
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 409 Conflict
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  summary: '409'
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 409 Conflict
  '/groups/{name}':
    get:
      summary: Get Record
      description: Retrieve a group record
      tags:
        - Groups
      responses:
        '200':
          $ref: '#/paths/~1groups/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a group, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Groups
      requestBody:
        description: 'JSON Patch document as defined by [RFC 6902](https://www.rfc-editor.org/rfc/rfc6902)'
        content:
          application/json:
            schema:
              title: JSON Patch
              description: 'A JSONPatch document as defined by [RFC 6902](https://www.rfc-editor.org/rfc/rfc6902)'
              type: array
              items:
                anyOf:
                  - title: Add / Replace / Test
                    type: object
                    properties:
                      path:
                        description: A JSON Pointer path to apply the operation to
                        type: string
                        pattern: '^(/[^/~]*(~[01][^/~]*)*)*$'
                      op:
                        description: The operation to perform
                        type: string
                        enum:
                          - add
                          - replace
                          - test
                      value:
                        description: 'The value to add, replace, or test'
                        nullable: true
                        oneOf:
                          - type: array
                            items:
                              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema/items/anyOf/0/properties/value'
                          - type: boolean
                          - type: number
                          - type: object
                          - type: string
                            nullable: true
                    required:
                      - path
                      - op
                      - value
                  - title: Copy / Move
                    type: object
                    properties:
                      path:
                        description: A JSON Pointer path to apply the operation to
                        type: string
                        pattern: '^(/[^/~]*(~[01][^/~]*)*)*$'
                      op:
                        description: The operation to perform
                        type: string
                        enum:
                          - copy
                          - move
                      from:
                        description: A JSON Pointer path to the referenced value
                        type: string
                        pattern: '^(/[^/~]*(~[01][^/~]*)*)*$'
                    required:
                      - path
                      - op
                      - from
                  - title: Remove
                    type: object
                    properties:
                      path:
                        description: A JSON Pointer path to apply the operation to
                        type: string
                        pattern: '^(/[^/~]*(~[01][^/~]*)*)*$'
                      op:
                        description: The operation to perform
                        type: string
                        enum:
                          - remove
                    required:
                      - path
                      - op
              example:
                - op: replace
                  path: /icon_class
                  value: fas fa-microscope
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1groups/post/responses/200'
        '304':
          description: No changes were found in the requested update
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a group record
      tags:
        - Groups
      responses:
        '204':
          description: The record was removed as requested
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: name
        in: path
        description: Group Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'
  /metrics:
    get:
      security: []
      description: |-
        Returns runtime metrics including counters and durations in Prometheus
        text-based exposition format.
      summary: Service metrics
      operationId: metrics
      parameters:
        - in: query
          name: all_hosts
          description: Return metrics from all hosts
          schema:
            type: string
            default: 'false'
            enum:
              - 'true'
              - 'false'
        - in: query
          name: flush
          description: Flush the stats / metrics database of recorded values
          schema:
            type: string
            default: 'true'
            enum:
              - 'true'
              - 'false'
      tags:
        - Monitoring & Metrics
      responses:
        '200':
          description: OK
          content:
            text/plain; version=0.0.4:
              examples:
                metrics:
                  summary: Metrics
                  value: |-
                    # TYPE http_requests_total counter
                    http_requests_total{endpoint="dashboard",hostname="example",method="GET",status="200"} 1
                    http_requests_total{endpoint="environments",hostname="example",method="GET",status="200"} 2
                    http_requests_total{endpoint="metrics",hostname="example",method="GET",status="200"} 5

                    # TYPE http_request_duration_seconds histogram
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="0.005"} 0
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="0.01"} 0
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="0.025"} 0
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="0.05"} 0
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="0.075"} 0
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="0.1"} 0
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="0.25"} 0
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="0.5"} 0
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="0.75"} 0
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="1.0"} 0
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="2.5"} 1
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="5.0"} 1
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="7.5"} 1
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="10.0"} 1
                    http_request_duration_seconds_bucket{endpoint="dashboard",hostname="example",method="GET",status="200",le="Inf+"} 1
                    http_request_duration_seconds_count{endpoint="dashboard",hostname="example",method="GET",status="200"} 1
                    http_request_duration_seconds_sum{endpoint="dashboard",hostname="example",method="GET",status="200"} 2.2017457485198975
  /namespaces:
    get:
      description: Retrieve the collection of namespaces
      summary: Get Collection
      tags:
        - Namespaces
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Namespace
                  description: Used to create namespaces for project organization
                  type: object
                  properties:
                    id:
                      description: The surrogate key for URLs and table linking
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    name:
                      description: The namespace name
                      type: string
                    slug:
                      description: Team path slug / abbreviation
                      type: string
                    icon_class:
                      description: Font Awesome UI icon class
                      type: string
                    maintained_by:
                      description: Association of the namespace to one or more internal or external Imbi groups
                      type: array
                      items:
                        type: string
                      nullable: true
                    gitlab_group_name:
                      description: Optional name of associated GitLab group
                      type: string
                      nullable: true
                    sentry_team_slug:
                      description: Optional name of associated Sentry team
                      type: string
                      nullable: true
                    pagerduty_policy:
                      description: Optional ID of associated PagerDuty escalation policy
                      type: string
                      nullable: true
                    aws_ssm_slug:
                      description: Optional slug of the namespace in the AWS SSM path
                      type: string
                      nullable: true
                  required:
                    - name
                    - slug
                    - icon_class
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple namespace records
                  value:
                    - id: 1
                      name: Platform Support Engineering
                      slug: PSE
                      icon_class: fas fa-blind
                      sentry_team_slug: pse
                      aws_ssm_slug: pse
                      maintained_by:
                        - Developers
                        - Operations
                    - id: 2
                      name: Quality Assurance
                      slug: QA
                      icon_class: fas fa-microscope
                      maintained_by:
                        - Developers
                        - QA
            application/msgpack:
              schema:
                type: array
                items:
                  title: Namespace
                  description: Used to create namespaces for project organization
                  type: object
                  properties:
                    id:
                      description: The surrogate key for URLs and table linking
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    name:
                      description: The namespace name
                      type: string
                    slug:
                      description: Team path slug / abbreviation
                      type: string
                    icon_class:
                      description: Font Awesome UI icon class
                      type: string
                    maintained_by:
                      description: Association of the namespace to one or more internal or external Imbi groups
                      type: array
                      items:
                        type: string
                      nullable: true
                    gitlab_group_name:
                      description: Optional name of associated GitLab group
                      type: string
                      nullable: true
                    sentry_team_slug:
                      description: Optional name of associated Sentry team
                      type: string
                      nullable: true
                    pagerduty_policy:
                      description: Optional ID of associated PagerDuty escalation policy
                      type: string
                      nullable: true
                    aws_ssm_slug:
                      description: Optional slug of the namespace in the AWS SSM path
                      type: string
                      nullable: true
                  required:
                    - name
                    - slug
                    - icon_class
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple namespace records
                  value:
                    - id: 1
                      name: Platform Support Engineering
                      slug: PSE
                      icon_class: fas fa-blind
                      sentry_team_slug: pse
                      aws_ssm_slug: pse
                      maintained_by:
                        - Developers
                        - Operations
                    - id: 2
                      name: Quality Assurance
                      slug: QA
                      icon_class: fas fa-microscope
                      maintained_by:
                        - Developers
                        - QA
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new namespace record
      requestBody:
        description: The namespace record to create
        content:
          application/json:
            schema:
              title: Namespace
              description: Used to create namespaces for project organization
              type: object
              properties:
                name:
                  description: The namespace name
                  type: string
                slug:
                  description: Team path slug / abbreviation
                  type: string
                icon_class:
                  description: Font Awesome UI icon class
                  type: string
                maintained_by:
                  description: Association of the namespace to one or more internal or external Imbi groups
                  type: array
                  items:
                    type: string
                  nullable: true
                gitlab_group_name:
                  description: Optional name of associated GitLab group
                  type: string
                  nullable: true
                sentry_team_slug:
                  description: Optional name of associated Sentry team
                  type: string
                  nullable: true
                pagerduty_policy:
                  description: Optional ID of associated PagerDuty escalation policy
                  type: string
                  nullable: true
                aws_ssm_slug:
                  description: Optional slug of the namespace in the AWS SSM path
                  type: string
                  nullable: true
              required:
                - name
                - slug
                - icon_class
              additionalProperties: false
            examples:
              record:
                summary: A full namespace record
                value:
                  name: Platform Support Engineering
                  slug: PSE
                  icon_class: fas fa-blind
                  sentry_team_slug: pse
                  aws_ssm_slug: pse
                  maintained_by:
                    - Developers
                    - Operations
          application/msgpack:
            schema:
              $ref: '#/paths/~1namespaces/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full namespace record
                value:
                  name: Platform Support Engineering
                  slug: PSE
                  icon_class: fas fa-blind
                  sentry_team_slug: pse
                  aws_ssm_slug: pse
                  maintained_by:
                    - Developers
                    - Operations
      tags:
        - Namespaces
      responses:
        '200':
          description: 'The request to create, update, or retrieve the namespace was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1namespaces/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A full namespace record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    name: Platform Support Engineering
                    slug: PSE
                    icon_class: fas fa-blind
                    maintained_by:
                      - Developers
                      - Operations
                    sentry_team_slug: pse
                    aws_ssm_slug: pse
            application/msgpack:
              schema:
                $ref: '#/paths/~1namespaces/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A full namespace record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    name: Platform Support Engineering
                    slug: PSE
                    icon_class: fas fa-blind
                    maintained_by:
                      - Developers
                      - Operations
                    sentry_team_slug: pse
                    aws_ssm_slug: pse
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/namespaces/{id}':
    get:
      summary: Get Record
      description: Retrieve a namespace record
      tags:
        - Namespaces
      responses:
        '200':
          $ref: '#/paths/~1namespaces/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a namespace, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Namespaces
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1namespaces/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a namespace record
      tags:
        - Namespaces
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Namespace ID
        required: true
        schema:
          type: number
  /integrations:
    get:
      description: Retrieve the collection of integrations
      summary: Get integrations
      tags:
        - Integrations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1integrations/post/responses/200/content/application~1json/schema'
    post:
      description: Add a new integration
      summary: Add integration
      tags:
        - Integrations
      requestBody:
        description: Integration details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                api_endpoint:
                  type: string
                api_secret:
                  type: string
                  nullable: true
              required:
                - name
                - api_endpoint
                - api_secret
              additionalProperties: false
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/paths/~1integrations/post/requestBody/content/application~1json/schema'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  api_endpoint:
                    type: string
                  api_secret:
                    description: Obscured API secret or `null`
                    type: string
                    nullable: true
                required:
                  - name
                  - api_endpoint
                  - api_secret
                additionalProperties: false
  '/integrations/{name}':
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
    get:
      description: Retrieve a specific integration by name
      summary: Fetch a single integration
      tags:
        - Integrations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1integrations/post/responses/200/content/application~1json/schema'
    delete:
      description: Remove the specified integration
      summary: Delete an integration
      tags:
        - Integrations
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      description: Update an integration
      summary: Update an integration
      tags:
        - Integrations
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1integrations/post/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
  '/integrations/{integration_name}/automations':
    parameters:
      - name: integration_name
        in: path
        description: Connected application that each automation is related to
        required: true
        schema:
          type: string
    get:
      description: Retrieve automations implemented by `integration_name`
      summary: Get Automations
      tags:
        - Automations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1automations/post/responses/200/content/application~1json/schema'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1automations/post/responses/200/content/application~1json/schema'
    post:
      description: Add an automation
      summary: Add Automation
      tags:
        - Automations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Human-readable name for this automation
                  type: string
                categories:
                  description: Which actions is this automation valid for?
                  type: array
                  items:
                    type: string
                    enum:
                      - create-project
                callable:
                  allOf:
                    - description: |
                        Identifies what to invoke for this automation.

                        This identifies which python function to invoke inside of the running
                        Imbi instance. It uses the [common import string] syntax.

                        [common import string]: https://docs.pydantic.dev/latest/api/types/#pydantic.types.ImportString
                      type: string
                    - type: string
                      default: imbi.endpoints.integrations.automations.do_nothing
                applies_to:
                  description: List of project types that this automation is valid for
                  type: array
                  items:
                    oneOf:
                      - type: string
                        title: slug
                        description: Identifies the project type using its slug
                      - type: integer
                        title: ID
                        description: Identifies the project type using its unique ID
                depends_on:
                  description: List of other automations that are required for this automation to run
                  type: array
                  items:
                    oneOf:
                      - type: string
                        title: slug
                        description: Identifies the automation using its slug
                      - type: integer
                        title: ID
                        description: Identifies the automation using its surrogate ID
              required:
                - name
                - categories
                - applies_to
              example:
                name: Create project
                categories:
                  - create-project
                applies_to:
                  - http-api
          application/msgpack:
            schema:
              $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1automations/post/requestBody/content/application~1json/schema'
      responses:
        '200':
          description: Newly created automation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Surrogate ID for this automation
                    type: integer
                  name:
                    description: Human-readable name for this automation
                    type: string
                  slug:
                    description: Machine-readable slug
                    type: string
                    pattern: '^[a-z0-9][-_a-z0-9]*[a-z0-9]$'
                    minLength: 2
                  integration_name:
                    description: The name of the integration that implements this automation
                    type: string
                  callable:
                    description: |
                      Identifies what to invoke for this automation.

                      This identifies which python function to invoke inside of the running
                      Imbi instance. It uses the [common import string] syntax.

                      [common import string]: https://docs.pydantic.dev/latest/api/types/#pydantic.types.ImportString
                    type: string
                  categories:
                    description: Which actions is this automation valid for?
                    type: array
                    items:
                      type: string
                      enum:
                        - create-project
                  applies_to:
                    description: Project type slugs that this automation can be run for
                    type: array
                    items:
                      type: string
                  depends_on:
                    description: Slugs of other automations that are required for this automation to be run
                    type: array
                    items:
                      type: string
                  created_at:
                    type: string
                    format: date-time
                  created_by:
                    type: string
                  last_modified_at:
                    type: string
                    format: date-time
                    nullable: true
                  last_modified_by:
                    type: string
                    nullable: true
                example:
                  id: 1
                  name: Create project
                  slug: github-create-project
                  integration_name: GitHub
                  callable: imbi.endpoints.integrations.automations.do_nothing
                  categories:
                    - create-project
                  applies_to:
                    - http-api
                  depends_on: []
                  created_at: '2024-02-27T21:05:46+0000'
                  created_by: me
                  last_modified_at: null
                  last_modified_by: null
            application/msgpack:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1automations/post/responses/200/content/application~1json/schema'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/integrations/{integration_name}/automations/{automation_name}':
    parameters:
      - name: integration_name
        in: path
        description: Application that implements this automation
        required: true
        schema:
          type: string
      - name: automation_name
        in: path
        description: Assigned slug or name of the automation
        required: true
        schema:
          type: string
    get:
      summary: Get Automation
      description: |
        Retrieve an automation by its slug, name, or surrogate ID
      tags:
        - Automations
      responses:
        '200':
          description: Record details
          content:
            application/json:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1automations/post/responses/200/content/application~1json/schema'
            application/msgpack:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1automations/post/responses/200/content/application~1json/schema'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    delete:
      summary: Delete Automation
      description: |
        Delete an automation by its slug, name, or surrogate ID
      tags:
        - Automations
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Automation
      description: |
        Update an automation by its slug, name, or surrogate ID
      tags:
        - Automations
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          description: Updated Record
          content:
            application/json:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1automations/post/responses/200/content/application~1json/schema'
            application/msgpack:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1automations/post/responses/200/content/application~1json/schema'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/integrations/{integration_name}/notifications':
    parameters:
      - name: integration_name
        in: path
        required: true
        schema:
          type: string
    get:
      description: Retrieve the collection of notifications defined for an integration
      summary: Get notifications
      tags:
        - Notifications
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications/post/responses/200/content/application~1json/schema'
    post:
      description: Add a new notification to an integration
      summary: Add notification
      tags:
        - Notifications
      requestBody:
        description: Notification details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                id_pattern:
                  type: string
                documentation:
                  type: string
                  format: uri
                  nullable: true
                verification_token:
                  type: string
                  nullable: true
                default_action:
                  type: string
                  enum:
                    - process
                    - ignore
              required:
                - name
                - id_pattern
                - documentation
                - verification_token
                - default_action
              additionalProperties: false
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications/post/requestBody/content/application~1json/schema'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  id_pattern:
                    type: string
                  documentation:
                    type: string
                    format: uri
                    nullable: true
                  default_action:
                    type: string
                    enum:
                      - process
                      - ignore
                required:
                  - name
                  - id_pattern
                  - documentation
                  - default_action
                additionalProperties: true
  '/integrations/{integration_name}/notifications/{notification_name}':
    parameters:
      - name: integration_name
        in: path
        required: true
        schema:
          type: string
      - name: notification_name
        in: path
        required: true
        schema:
          type: string
    get:
      description: Retrieve a specific notification by name
      summary: Fetch a single notification
      tags:
        - Notifications
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications/post/responses/200/content/application~1json/schema'
    delete:
      description: Remove the specified notification
      summary: Delete a notification
      tags:
        - Notifications
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      description: Update a notification
      summary: Update a notification
      tags:
        - Notifications
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications/post/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
  '/integrations/{integration_name}/notifications/{notification_name}/filters':
    parameters:
      - name: integration_name
        in: path
        required: true
        schema:
          type: string
      - name: notification_name
        in: path
        required: true
        schema:
          type: string
    get:
      description: Retrieve the collection of filters for a notification
      summary: Get notification filters
      tags:
        - Notifications
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications~1%7Bnotification_name%7D~1filters/post/responses/200/content/application~1json/schema'
    post:
      description: Add a new filter to a notification
      summary: Add notification filter
      tags:
        - Notifications
      requestBody:
        description: Filter details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                pattern:
                  type: string
                operation:
                  type: string
                  enum:
                    - '=='
                    - '!='
                value:
                  type: string
                  nullable: true
                action:
                  type: string
                  enum:
                    - process
                    - ignore
              required:
                - name
                - pattern
                - operation
                - value
                - action
              additionalProperties: false
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications~1%7Bnotification_name%7D~1filters/post/requestBody/content/application~1json/schema'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  pattern:
                    type: string
                  operation:
                    type: string
                    enum:
                      - '=='
                      - '!='
                  value:
                    type: string
                    nullable: true
                  action:
                    type: string
                    enum:
                      - process
                      - ignore
                required:
                  - name
                  - pattern
                  - operation
                  - value
                  - action
                additionalProperties: true
  '/integrations/{integration_name}/notifications/{notification_name}/filters/{filter_name}':
    parameters:
      - name: integration_name
        in: path
        required: true
        schema:
          type: string
      - name: notification_name
        in: path
        required: true
        schema:
          type: string
      - name: filter_name
        in: path
        required: true
        schema:
          type: string
    get:
      description: Retrieve a specific filter from a notification by name
      summary: Fetch a notification filter
      tags:
        - Notifications
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications~1%7Bnotification_name%7D~1filters/post/responses/200/content/application~1json/schema'
    delete:
      description: Remove the filter from the notification
      summary: Delete a notification filter
      tags:
        - Notifications
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      description: Update a notification filter
      summary: Update a notification filter
      tags:
        - Notifications
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications~1%7Bnotification_name%7D~1filters/post/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
  '/integrations/{integration_name}/notifications/{notification_name}/rules':
    parameters:
      - name: integration_name
        in: path
        required: true
        schema:
          type: string
      - name: notification_name
        in: path
        required: true
        schema:
          type: string
    get:
      description: Retrieve the collection of rules for a notification
      summary: Get notification rules
      tags:
        - Notifications
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications~1%7Bnotification_name%7D~1rules/post/responses/200/content/application~1json/schema'
    post:
      description: Add a new rule to a notification
      summary: Add notification rule
      tags:
        - Notifications
      requestBody:
        description: Rule details
        content:
          application/json:
            schema:
              type: object
              properties:
                fact_type_id:
                  type: integer
                pattern:
                  type: string
              required:
                - fact_type_id
                - pattern
              additionalProperties: false
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications~1%7Bnotification_name%7D~1rules/post/requestBody/content/application~1json/schema'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  fact_type_id:
                    type: integer
                  pattern:
                    type: string
                required:
                  - fact_type_id
                  - pattern
                additionalProperties: true
  '/integrations/{integration_name}/notifications/{notification_name}/rules/{rule_name}':
    parameters:
      - name: integration_name
        in: path
        required: true
        schema:
          type: string
      - name: notification_name
        in: path
        required: true
        schema:
          type: string
      - name: rule_name
        in: path
        required: true
        schema:
          type: string
    get:
      description: Retrieve a specific rule from a notification by name
      summary: Fetch a notification rule
      tags:
        - Notifications
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications~1%7Bnotification_name%7D~1rules/post/responses/200/content/application~1json/schema'
    delete:
      description: Remove a rule from the notification
      summary: Delete a notification rule
      tags:
        - Notifications
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      description: Update a notification rule
      summary: Update a notification rule
      tags:
        - Notifications
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1integrations~1%7Bintegration_name%7D~1notifications~1%7Bnotification_name%7D~1rules/post/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
  /operations-log:
    get:
      description: Retrieve the collection of operational log entries
      summary: Get Entries
      tags:
        - Operations Log
      parameters:
        - name: from
          in: query
          description: |-
            Add to limit the response to operations log entries with a `recorded_at`
            value that is greater than or equal to the specified value.
          schema:
            type: string
            format: iso8601-timestamp
        - name: to
          in: query
          description: |-
            Add to limit the response to operations log entries with a `recorded_at`
            value that is less than or equal to the specified value.
          schema:
            type: string
            format: iso8601-timestamp
        - name: order
          in: query
          description: Specify the order to return entries by using the `recorded_at` value.
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - name: namespace_id
          in: query
          description: Specify a namespace ID to filter entries to a specific namespace
          schema:
            type: string
            pattern: ^\d+$
        - name: project_id
          in: query
          description: Specify a project ID to filter entries to a specific project
          schema:
            type: string
            pattern: ^\d+$
        - name: limit
          in: query
          description: Used to specify a limit to the number of entries that may be returned in a single response.
          schema:
            type: string
            pattern: ^\d+$
        - name: recorded_at_anchor
          in: query
          description: |-
            Defined in Link header URLs, specifying the `recorded_at` value of
            the row closest to, but outside of, the linked page's result set.
          schema:
            type: string
            format: iso8601-timestamp
        - name: id_anchor
          in: query
          description: |-
            Defined in Link header URLs, specifying the `id` of the row which
            `recorded_at_anchor` comes from.
          schema:
            type: string
            pattern: ^\d+$
        - name: page_direction
          in: query
          description: 'Defined in Link header URLs, specifying whether it is a next or a previous link.'
          schema:
            type: string
            enum:
              - next
              - previous
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Operations Log Entry
                  description: Describes an audit log entry for entity operational changes
                  type: object
                  properties:
                    id:
                      description: Surrogate ID for deleting and modifying entries
                      type: number
                    recorded_at:
                      description: Timestamp indicating when the change was made
                      type: string
                      format: iso8601-timestamp
                    recorded_by:
                      description: The name of the user who recorded the change
                      type: string
                    email_address:
                      description: The email address of the user who recorded the change
                      type: string
                    display_name:
                      description: Name of the user that recorded the change
                      type: string
                    completed_at:
                      description: 'If specified, indicates the change occurred over a span of time'
                      type: string
                      format: iso8601-timestamp
                      nullable: true
                    project_id:
                      description: The ID of the project that was changed
                      type: number
                      nullable: true
                    project_name:
                      description: The name of the project that was changed
                      type: string
                      nullable: true
                    environment:
                      description: The environment that the change occurred in
                      type: string
                    change_type:
                      description: The type of change that occurred
                      type: string
                      enum:
                        - Configured
                        - Decommissioned
                        - Deployed
                        - Migrated
                        - Provisioned
                        - Restarted
                        - Rolled Back
                        - Scaled
                        - Upgraded
                    type:
                      description: The entry type for this item
                      type: string
                      enum:
                        - OperationsLogEntry
                    description:
                      description: The single line description of the change
                      type: string
                      nullable: true
                    link:
                      description: An optional link for additional context to the entry
                      type: string
                      nullable: true
                    notes:
                      description: Optional notes for the change in markdown format
                      type: string
                      nullable: true
                    ticket_slug:
                      description: An optional slug of the ticket that the change was made for
                      type: string
                      pattern: '^[\w-]+$'
                      nullable: true
                    version:
                      description: An optional version that the change was made for
                      type: string
                      nullable: true
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple operations log entries
                  value:
                    - id: 1
                      recorded_at: 2021-05-21T18:39:24.197Z
                      recorded_by: gavinr
                      type: OperationsLogEntry
                      display_name: Gavin M. Roy
                      email_address: gavinr@example.com
                      completed_at: null
                      project_id: 100
                      environment: Testing
                      change_type: Deployment
                      description: Added the Operations Log functionality
                      link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                      notes: null
                      ticket_slug: JIRA-32768
                      version: 0.13.0
                    - id: 2
                      recorded_at: 2021-05-21T18:42:00.000Z
                      recorded_by: gavinr
                      type: OperationsLogEntry
                      display_name: Gavin M. Roy
                      email_address: gavinr@example.com
                      completed_at: null
                      project_id: 100
                      environment: Staging
                      change_type: Deployment
                      description: Added the Operations Log functionality
                      link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                      notes: null
                      ticket_slug: JIRA-32768
                      version: 0.13.0
                    - id: 3
                      recorded_at: 2021-05-21T19:00:00.000Z
                      recorded_by: gavinr
                      type: OperationsLogEntry
                      display_name: Gavin M. Roy
                      email_address: gavinr@example.com
                      completed_at: null
                      project_id: 100
                      environment: Staging
                      change_type: Deployment
                      description: Added the Operations Log functionality
                      link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                      notes: null
                      ticket_slug: JIRA-32768
                      version: 0.13.0
            application/msgpack:
              schema:
                type: array
                items:
                  title: Operations Log Entry
                  description: Describes an audit log entry for entity operational changes
                  type: object
                  properties:
                    id:
                      description: Surrogate ID for deleting and modifying entries
                      type: number
                    recorded_at:
                      description: Timestamp indicating when the change was made
                      type: string
                      format: iso8601-timestamp
                    recorded_by:
                      description: The name of the user who recorded the change
                      type: string
                    email_address:
                      description: The email address of the user who recorded the change
                      type: string
                    display_name:
                      description: Name of the user that recorded the change
                      type: string
                    completed_at:
                      description: 'If specified, indicates the change occurred over a span of time'
                      type: string
                      format: iso8601-timestamp
                      nullable: true
                    project_id:
                      description: The ID of the project that was changed
                      type: number
                      nullable: true
                    project_name:
                      description: The name of the project that was changed
                      type: string
                      nullable: true
                    environment:
                      description: The environment that the change occurred in
                      type: string
                    change_type:
                      description: The type of change that occurred
                      type: string
                      enum:
                        - Configured
                        - Decommissioned
                        - Deployed
                        - Migrated
                        - Provisioned
                        - Restarted
                        - Rolled Back
                        - Scaled
                        - Upgraded
                    type:
                      description: The entry type for this item
                      type: string
                      enum:
                        - OperationsLogEntry
                    description:
                      description: The single line description of the change
                      type: string
                      nullable: true
                    link:
                      description: An optional link for additional context to the entry
                      type: string
                      nullable: true
                    notes:
                      description: Optional notes for the change in markdown format
                      type: string
                      nullable: true
                    ticket_slug:
                      description: An optional slug of the ticket that the change was made for
                      type: string
                      pattern: '^[\w-]+$'
                      nullable: true
                    version:
                      description: An optional version that the change was made for
                      type: string
                      nullable: true
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple operations log entries
                  value:
                    - id: 1
                      recorded_at: 2021-05-21T18:39:24.197Z
                      recorded_by: gavinr
                      type: OperationsLogEntry
                      display_name: Gavin M. Roy
                      email_address: gavinr@example.com
                      completed_at: null
                      project_id: 100
                      environment: Testing
                      change_type: Deployment
                      description: Added the Operations Log functionality
                      link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                      notes: null
                      ticket_slug: JIRA-32768
                      version: 0.13.0
                    - id: 2
                      recorded_at: 2021-05-21T18:42:00.000Z
                      recorded_by: gavinr
                      type: OperationsLogEntry
                      display_name: Gavin M. Roy
                      email_address: gavinr@example.com
                      completed_at: null
                      project_id: 100
                      environment: Staging
                      change_type: Deployment
                      description: Added the Operations Log functionality
                      link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                      notes: null
                      ticket_slug: JIRA-32768
                      version: 0.13.0
                    - id: 3
                      recorded_at: 2021-05-21T19:00:00.000Z
                      recorded_by: gavinr
                      type: OperationsLogEntry
                      display_name: Gavin M. Roy
                      email_address: gavinr@example.com
                      completed_at: null
                      project_id: 100
                      environment: Staging
                      change_type: Deployment
                      description: Added the Operations Log functionality
                      link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                      notes: null
                      ticket_slug: JIRA-32768
                      version: 0.13.0
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Entry
      description: Create a new operations log entry
      requestBody:
        description: The entry to create
        content:
          application/json:
            schema:
              title: Operations Log Entry
              description: Describes an audit log entry for entity operational changes
              type: object
              properties:
                recorded_at:
                  description: Timestamp indicating when the change was made
                  type: string
                  format: iso8601-timestamp
                recorded_by:
                  description: The user who recorded the change
                  type: string
                completed_at:
                  description: 'If specified, indicates the change occurred over a span of time'
                  type: string
                  format: iso8601-timestamp
                  nullable: true
                project_id:
                  description: The ID of the project that was changed
                  type: number
                  nullable: true
                environment:
                  description: The environment that the change occurred in
                  type: string
                change_type:
                  description: The type of change that occurred
                  type: string
                  enum:
                    - Configured
                    - Decommissioned
                    - Deployed
                    - Migrated
                    - Provisioned
                    - Restarted
                    - Rolled Back
                    - Scaled
                    - Upgraded
                description:
                  description: The single line description of the change
                  type: string
                  nullable: true
                link:
                  description: An optional link for additional context to the entry
                  type: string
                  nullable: true
                notes:
                  description: Optional notes for the change in markdown format
                  type: string
                  nullable: true
                ticket_slug:
                  description: An optional slug of the ticket that the change was made for
                  type: string
                  pattern: '^[\w-]+$'
                  nullable: true
                version:
                  description: An optional version that the change was made for
                  type: string
                  nullable: true
              required:
                - recorded_by
                - environment
                - change_type
                - description
              additionalProperties: false
            examples:
              record:
                summary: An operations log entry example
                value:
                  recorded_at: 2021-05-21T18:39:24.197Z
                  recorded_by: gavinr
                  completed_at: null
                  project_id: 100
                  environment: Testing
                  change_type: Deployment
                  description: Added the Operations Log functionality
                  link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                  notes: null
                  ticket_slug: JIRA-32768
                  version: 0.13.0
          application/msgpack:
            schema:
              $ref: '#/paths/~1operations-log/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: An operations log entry example
                value:
                  recorded_at: 2021-05-21T18:39:24.197Z
                  recorded_by: gavinr
                  completed_at: null
                  project_id: 100
                  environment: Testing
                  change_type: Deployment
                  description: Added the Operations Log functionality
                  link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                  notes: null
                  ticket_slug: JIRA-32768
                  version: 0.13.0
      tags:
        - Operations Log
      responses:
        '200':
          description: 'The request to create, update, or update the operations-log entry was successful'
          headers:
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1operations-log/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: An operations log entry example
                  value:
                    id: 1
                    recorded_at: 2021-05-21T18:39:24.197Z
                    recorded_by: gavinr
                    type: OperationsLogEntry
                    display_name: Gavin M. Roy
                    email_address: gavinr@example.com
                    completed_at: null
                    project_id: 100
                    environment: Testing
                    change_type: Deployment
                    description: Added the Operations Log functionality
                    link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                    notes: null
                    ticket_slug: JIRA-32768
                    version: 0.13.0
            application/msgpack:
              schema:
                $ref: '#/paths/~1operations-log/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: An operations log entry example
                  value:
                    id: 1
                    recorded_at: 2021-05-21T18:39:24.197Z
                    recorded_by: gavinr
                    type: OperationsLogEntry
                    display_name: Gavin M. Roy
                    email_address: gavinr@example.com
                    completed_at: null
                    project_id: 100
                    environment: Testing
                    change_type: Deployment
                    description: Added the Operations Log functionality
                    link: 'https://github.com/aweber/imbi/releases/tag/0.13.0'
                    notes: null
                    ticket_slug: JIRA-32768
                    version: 0.13.0
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/operations-log/{id}':
    get:
      summary: Get Entry
      description: Retrieve an individual operations log entry
      tags:
        - Operations Log
      responses:
        '200':
          $ref: '#/paths/~1operations-log/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Entry
      description: |-
        Update an operations log entry, providing a JSON Patch (RFC-6209) payload of update
        operations to apply.
      tags:
        - Operations Log
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1operations-log/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Entry
      description: Remove an operations log entry
      tags:
        - Operations Log
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Entry ID
        required: true
        schema:
          type: string
          pattern: ^\d+$
  /operations-log/build-search-index:
    post:
      summary: Index the operations log
      description: Queue all operations log entries to be added to the opensearch index
      tags:
        - Operations Log
      responses:
        '200':
          description: The request to index the operations log was successful
          content:
            application/json:
              schema:
                title: Success
                description: How many operations log entries were queued for indexing
                type: object
                properties:
                  status:
                    description: Whether the operation succeeded
                    type: string
                  message:
                    description: How many operations log entries were queued for indexing
                    type: string
            application/msgpack:
              schema:
                title: Success
                description: How many operations log entries were queued for indexing
                type: object
                properties:
                  status:
                    description: Whether the operation succeeded
                    type: string
                  message:
                    description: How many operations log entries were queued for indexing
                    type: string
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  /permissions:
    get:
      description: Retrieve the collection of available permissions
      summary: Get Permissions
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                records:
                  summary: Multiple permissions
                  value:
                    - admin
                    - user
            application/msgpack:
              schema:
                type: array
                items:
                  type: string
              examples:
                records:
                  summary: Multiple permissions
                  value:
                    - admin
                    - user
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  /project-fact-types:
    get:
      description: Retrieve the collection of project fact types
      summary: Get Collection
      tags:
        - Fact Types
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project Fact Type
                  description: |
                    Defines types of facts that can be recorded about a project
                  type: object
                  properties:
                    id:
                      description: The surrogate ID
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    name:
                      description: The project fact type name
                      type: string
                    project_type_ids:
                      description: An array of Project Type ids to associate the fact type with
                      type: array
                      items:
                        type: number
                      uniqueItems: true
                    fact_type:
                      description: Indicates how a fact value is validated and scored
                      type: string
                      enum:
                        - enum
                        - free-form
                        - range
                    description:
                      description: Provides additional context about the fact typee
                      type: string
                      nullable: true
                    data_type:
                      description: The data type for the value
                      type: string
                      enum:
                        - boolean
                        - date
                        - decimal
                        - integer
                        - string
                        - timestamp
                    ui_options:
                      description: An array of values that are used in the UI for display purposes
                      type: array
                      items:
                        type: string
                        enum:
                          - display-as-badge
                          - display-as-percentage
                          - hidden
                          - read-only
                      uniqueItems: true
                    weight:
                      description: The weight of the fact type when computing a project score
                      type: number
                      default: 0
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project fact type records
                  value:
                    - id: 1
                      project_type_id:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                        - 7
                      name: Programming Language
                      fact_type: enum
                      description: null
                      ui_options: []
                      weight: 25
                    - id: 2
                      project_type_id:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                      name: Test Coverage
                      data_type: boolean
                      fact_type: range
                      description: null
                      ui_options: []
                      weight: 25
                    - id: 3
                      project_type_id:
                        - 1
                        - 2
                        - 3
                      name: Deployed to all Environments
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      weight: 20
                    - id: 4
                      project_type_id:
                        - 1
                        - 2
                      name: Has Acceptance Tests
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      weight: 10
                    - id: 5
                      project_type_id:
                        - 1
                        - 2
                      name: Meets Current Standards
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      weight: 10
                    - id: 6
                      project_type_ids:
                        - 1
                        - 2
                      name: Has working CI pipeline
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      weight: 10
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project Fact Type
                  description: |
                    Defines types of facts that can be recorded about a project
                  type: object
                  properties:
                    id:
                      description: The surrogate ID
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    name:
                      description: The project fact type name
                      type: string
                    project_type_ids:
                      description: An array of Project Type ids to associate the fact type with
                      type: array
                      items:
                        type: number
                      uniqueItems: true
                    fact_type:
                      description: Indicates how a fact value is validated and scored
                      type: string
                      enum:
                        - enum
                        - free-form
                        - range
                    description:
                      description: Provides additional context about the fact typee
                      type: string
                      nullable: true
                    data_type:
                      description: The data type for the value
                      type: string
                      enum:
                        - boolean
                        - date
                        - decimal
                        - integer
                        - string
                        - timestamp
                    ui_options:
                      description: An array of values that are used in the UI for display purposes
                      type: array
                      items:
                        type: string
                        enum:
                          - display-as-badge
                          - display-as-percentage
                          - hidden
                          - read-only
                      uniqueItems: true
                    weight:
                      description: The weight of the fact type when computing a project score
                      type: number
                      default: 0
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project fact type records
                  value:
                    - id: 1
                      project_type_id:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                        - 7
                      name: Programming Language
                      fact_type: enum
                      description: null
                      ui_options: []
                      weight: 25
                    - id: 2
                      project_type_id:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                      name: Test Coverage
                      data_type: boolean
                      fact_type: range
                      description: null
                      ui_options: []
                      weight: 25
                    - id: 3
                      project_type_id:
                        - 1
                        - 2
                        - 3
                      name: Deployed to all Environments
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      weight: 20
                    - id: 4
                      project_type_id:
                        - 1
                        - 2
                      name: Has Acceptance Tests
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      weight: 10
                    - id: 5
                      project_type_id:
                        - 1
                        - 2
                      name: Meets Current Standards
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      weight: 10
                    - id: 6
                      project_type_ids:
                        - 1
                        - 2
                      name: Has working CI pipeline
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      weight: 10
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project fact type record
      requestBody:
        description: The project fact type record to create
        content:
          application/json:
            schema:
              title: Project Fact Type
              description: |
                Defines types of facts that can be recorded about a project
              type: object
              properties:
                name:
                  description: The project fact type name
                  type: string
                project_type_ids:
                  description: An array of Project Type ids to associate the fact type with
                  type: array
                  items:
                    type: number
                  uniqueItems: true
                fact_type:
                  description: Indicates how a fact value is validated and scored
                  type: string
                  enum:
                    - enum
                    - free-form
                    - range
                description:
                  description: Provides additional context about the fact typee
                  type: string
                  nullable: true
                data_type:
                  description: The data type for the value
                  type: string
                  enum:
                    - boolean
                    - date
                    - decimal
                    - integer
                    - string
                    - timestamp
                ui_options:
                  description: An array of values that are used in the UI for display purposes
                  type: array
                  items:
                    type: string
                    enum:
                      - display-as-badge
                      - display-as-percentage
                      - hidden
                      - read-only
                  uniqueItems: true
                weight:
                  description: The weight of the fact type when computing a project score
                  type: number
                  default: 0
              required:
                - name
                - fact_type
                - data_type
                - weight
              additionalProperties: false
            examples:
              record:
                summary: A full project fact type record
                value:
                  project_type_ids:
                    - 1
                  name: Programming Language
                  fact_type: enum
                  data_type: boolean
                  description: The programming language used in the project
                  ui_options: []
                  weight: 25
          application/msgpack:
            schema:
              $ref: '#/paths/~1project-fact-types/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full project fact type record
                value:
                  project_type_ids:
                    - 1
                  name: Programming Language
                  fact_type: enum
                  data_type: boolean
                  description: The programming language used in the project
                  ui_options: []
                  weight: 25
      tags:
        - Fact Types
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project fact type was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1project-fact-types/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A full project fact type record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    project_type_ids:
                      - 1
                    name: Programming Language
                    fact_type: enum
                    data_type: boolean
                    description: The programming language used in the project
                    ui_options: []
                    weight: 25
            application/msgpack:
              schema:
                $ref: '#/paths/~1project-fact-types/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A full project fact type record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    project_type_ids:
                      - 1
                    name: Programming Language
                    fact_type: enum
                    data_type: boolean
                    description: The programming language used in the project
                    ui_options: []
                    weight: 25
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/project-fact-types/{fact_type_id}':
    get:
      summary: Get Record
      description: Retrieve a project fact type record
      tags:
        - Fact Types
      responses:
        '200':
          $ref: '#/paths/~1project-fact-types/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a project fact type, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Fact Types
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1project-fact-types/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project fact type record
      tags:
        - Fact Types
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: fact_type_id
        in: path
        description: Fact Type ID
        required: true
        schema:
          type: number
  /project-fact-type-enums:
    get:
      description: Retrieve the collection of project fact type enums
      summary: Get Collection
      tags:
        - Fact Type Enums
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project Fact Type Enum Value
                  description: |
                    Defines options that are available for an enum project fact type
                  type: object
                  properties:
                    id:
                      description: The surrogate key for the fact type option
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    fact_type_id:
                      description: The ID of the fact type the option is for
                      type: string
                    value:
                      description: The option value
                      type: string
                    icon_class:
                      description: An icon that is specific to the fact type option
                      type: string
                    score:
                      description: The score value for the option
                      type: number
                      default: 0
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project fact type enum records
                  value:
                    - id: 1
                      fact_type_id: 1
                      icon_class: fab python
                      value: Python 3.9
                      score: 100
                    - id: 2
                      fact_type_id: 1
                      icon_class: fab python
                      value: Python 3.7
                      score: 75
                    - id: 3
                      fact_type_id: 1
                      icon_class: fab python
                      value: Python 3.6
                      score: 50
                    - id: 4
                      fact_type_id: 1
                      icon_class: fab python
                      value: Python 3.5
                      score: 50
                    - id: 5
                      fact_type_id: 1
                      icon_class: fab python
                      value: Python 2.7
                      score: 0
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project Fact Type Enum Value
                  description: |
                    Defines options that are available for an enum project fact type
                  type: object
                  properties:
                    id:
                      description: The surrogate key for the fact type option
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    fact_type_id:
                      description: The ID of the fact type the option is for
                      type: string
                    value:
                      description: The option value
                      type: string
                    icon_class:
                      description: An icon that is specific to the fact type option
                      type: string
                    score:
                      description: The score value for the option
                      type: number
                      default: 0
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project fact type enum records
                  value:
                    - id: 1
                      fact_type_id: 1
                      icon_class: fab python
                      value: Python 3.9
                      score: 100
                    - id: 2
                      fact_type_id: 1
                      icon_class: fab python
                      value: Python 3.7
                      score: 75
                    - id: 3
                      fact_type_id: 1
                      icon_class: fab python
                      value: Python 3.6
                      score: 50
                    - id: 4
                      fact_type_id: 1
                      icon_class: fab python
                      value: Python 3.5
                      score: 50
                    - id: 5
                      fact_type_id: 1
                      icon_class: fab python
                      value: Python 2.7
                      score: 0
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project fact type enum record
      requestBody:
        description: The project fact type enum record to create
        content:
          application/json:
            schema:
              title: Project Fact Type Enum Value
              description: |
                Defines options that are available for a project fact type
              type: object
              properties:
                fact_type_id:
                  description: The ID of the fact type the option is for
                  type: number
                value:
                  description: The option value
                  type: string
                icon_class:
                  description: An icon that is specific to the fact type option
                  type: string
                  nullable: true
                score:
                  description: The score value for the option
                  type: number
                  default: 0
              required:
                - fact_type_id
                - value
                - score
              additionalProperties: false
            examples:
              record:
                summary: A full project fact type enum record
                value:
                  fact_type_id: 1
                  value: Python 3.5
                  icon_class: fab python
                  score: 50
          application/msgpack:
            schema:
              $ref: '#/paths/~1project-fact-type-enums/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full project fact type enum record
                value:
                  fact_type_id: 1
                  value: Python 3.5
                  icon_class: fab python
                  score: 50
      tags:
        - Fact Type Enums
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project fact type option was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1project-fact-type-enums/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A full project fact type enum record
                  value:
                    id: 1
                    fact_type_id: 1
                    created_by: test
                    last_modified_by: null
                    value: Python 3.5
                    icon_class: fab python
                    score: 50
            application/msgpack:
              schema:
                $ref: '#/paths/~1project-fact-type-enums/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A full project fact type enum record
                  value:
                    id: 1
                    fact_type_id: 1
                    created_by: test
                    last_modified_by: null
                    value: Python 3.5
                    icon_class: fab python
                    score: 50
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/project-fact-type-enums/{id}':
    get:
      summary: Get Record
      description: Retrieve a project fact type enum record
      tags:
        - Fact Type Enums
      responses:
        '200':
          $ref: '#/paths/~1project-fact-type-enums/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a project fact type option, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Fact Type Enums
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1project-fact-type-enums/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project fact type enum record
      tags:
        - Fact Type Enums
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Fact Type Option ID
        required: true
        schema:
          type: number
  /project-fact-type-ranges:
    get:
      description: Retrieve the collection of project fact type ranges
      summary: Get Collection
      tags:
        - Fact Type Ranges
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project Fact Type Range Value
                  description: |
                    Defines options that are available for an range project fact type
                  type: object
                  properties:
                    id:
                      description: The surrogate key for the fact type option
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    fact_type_id:
                      description: The ID of the fact type the option is for
                      type: string
                    min_value:
                      description: The min value for the range
                      type: number
                    max_value:
                      description: The max value for the range
                      type: number
                    score:
                      description: The score value for the option
                      type: number
                      default: 0
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project fact type range records
                  value:
                    - id: 1
                      fact_type_id: 1
                      min_value: 90
                      max_value: 100
                      score: 100
                    - id: 2
                      fact_type_id: 1
                      min_value: 75
                      max_value: 89
                      score: 75
                    - id: 3
                      fact_type_id: 1
                      min_value: 50
                      max_value: 74
                      score: 50
                    - id: 4
                      fact_type_id: 1
                      min_value: 0
                      max_value: 49
                      score: 50
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project Fact Type Range Value
                  description: |
                    Defines options that are available for an range project fact type
                  type: object
                  properties:
                    id:
                      description: The surrogate key for the fact type option
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    fact_type_id:
                      description: The ID of the fact type the option is for
                      type: string
                    min_value:
                      description: The min value for the range
                      type: number
                    max_value:
                      description: The max value for the range
                      type: number
                    score:
                      description: The score value for the option
                      type: number
                      default: 0
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project fact type range records
                  value:
                    - id: 1
                      fact_type_id: 1
                      min_value: 90
                      max_value: 100
                      score: 100
                    - id: 2
                      fact_type_id: 1
                      min_value: 75
                      max_value: 89
                      score: 75
                    - id: 3
                      fact_type_id: 1
                      min_value: 50
                      max_value: 74
                      score: 50
                    - id: 4
                      fact_type_id: 1
                      min_value: 0
                      max_value: 49
                      score: 50
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project fact type range record
      requestBody:
        description: The project fact type range record to create
        content:
          application/json:
            schema:
              title: Project Fact Type Range Value
              description: |
                Defines options that are available for a project fact type
              type: object
              properties:
                fact_type_id:
                  description: The ID of the fact type the option is for
                  type: number
                min_value:
                  description: The min value for the range
                  type: number
                max_value:
                  description: The max value for the range
                  type: number
                score:
                  description: The score value for the option
                  type: number
                  default: 0
              required:
                - fact_type_id
                - min_value
                - max_value
                - score
              additionalProperties: false
            examples:
              record:
                summary: A full project fact type range record
                value:
                  fact_type_id: 1
                  min_value: 10
                  max_value: 20
                  score: 50
          application/msgpack:
            schema:
              $ref: '#/paths/~1project-fact-type-ranges/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full project fact type range record
                value:
                  fact_type_id: 1
                  min_value: 10
                  max_value: 20
                  score: 50
      tags:
        - Fact Type Ranges
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project fact type range was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1project-fact-type-ranges/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A full project fact type range record
                  value:
                    id: 1
                    fact_type_id: 1
                    created_by: test
                    last_modified_by: null
                    min_value: 0
                    max_value: 49
                    score: 50
            application/msgpack:
              schema:
                $ref: '#/paths/~1project-fact-type-ranges/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A full project fact type range record
                  value:
                    id: 1
                    fact_type_id: 1
                    created_by: test
                    last_modified_by: null
                    min_value: 0
                    max_value: 49
                    score: 50
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/project-fact-type-ranges/{id}':
    get:
      summary: Get Record
      description: Retrieve a project fact type range record
      tags:
        - Fact Type Ranges
      responses:
        '200':
          $ref: '#/paths/~1project-fact-type-ranges/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a project fact type option, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Fact Type Ranges
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1project-fact-type-ranges/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project fact type range record
      tags:
        - Fact Type Ranges
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Fact Type Option ID
        required: true
        schema:
          type: number
  /project-link-types:
    get:
      description: Retrieve the collection of project link types
      summary: Get Collection
      tags:
        - Project Link Types
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Link Type
                  description: Used to describe the types of project deployment systems
                  type: object
                  properties:
                    id:
                      description: The surrogate key for URLs and table linking
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    link_type:
                      description: The display name for a link type
                      type: string
                    icon_class:
                      description: Font Awesome UI icon class
                      type: string
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project link type records
                  value:
                    - project_link_type: documentation
                      icon_class: fab fa-bool
                    - project_link_type: grafana
                      icon_class: fab fa-grafana
                    - project_link_type: gitlab
                      icon_class: fab fa-gitlab
            application/msgpack:
              schema:
                type: array
                items:
                  title: Link Type
                  description: Used to describe the types of project deployment systems
                  type: object
                  properties:
                    id:
                      description: The surrogate key for URLs and table linking
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    link_type:
                      description: The display name for a link type
                      type: string
                    icon_class:
                      description: Font Awesome UI icon class
                      type: string
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project link type records
                  value:
                    - project_link_type: documentation
                      icon_class: fab fa-bool
                    - project_link_type: grafana
                      icon_class: fab fa-grafana
                    - project_link_type: gitlab
                      icon_class: fab fa-gitlab
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new link type record
      requestBody:
        description: The link type record to create
        content:
          application/json:
            schema:
              title: Link Type
              description: Used to describe the types of project deployment systems
              type: object
              properties:
                link_type:
                  description: The display name for a link type
                  type: string
                icon_class:
                  description: Font Awesome UI icon class
                  type: string
              required:
                - link_type
                - icon_class
              additionalProperties: false
            examples:
              record:
                summary: A full link type record
                value:
                  link_type: documentation
                  icon_class: fab fa-bool
          application/msgpack:
            schema:
              $ref: '#/paths/~1project-link-types/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full link type record
                value:
                  link_type: documentation
                  icon_class: fab fa-bool
      tags:
        - Project Link Types
      responses:
        '200':
          description: 'The request to create, update, or retrieve the link type was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1project-link-types/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: The record when returned from the API
                  value:
                    id: 1
                    created_by: test
                    last_modified_by: null
                    link_type: documentation
                    icon_class: fab fa-bool
            application/msgpack:
              schema:
                $ref: '#/paths/~1project-link-types/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: The record when returned from the API
                  value:
                    id: 1
                    created_by: test
                    last_modified_by: null
                    link_type: documentation
                    icon_class: fab fa-bool
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/project-link-types/{id}':
    get:
      summary: Get Record
      description: Retrieve an link type record
      tags:
        - Project Link Types
      responses:
        '200':
          $ref: '#/paths/~1project-link-types/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update an link type, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Project Link Types
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1project-link-types/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove an link type record
      tags:
        - Project Link Types
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Link Type Surrogate ID
        required: true
        schema:
          type: number
  /project-types:
    get:
      description: Retrieve the collection of project types
      summary: Get Collection
      tags:
        - Project Types
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project Type
                  description: |
                    Used to describe the types of operational project_types for projects
                  type: object
                  properties:
                    id:
                      description: The surrogate key for URLs and table linking
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    name:
                      description: The display name for a project type
                      type: string
                    plural_name:
                      description: The display name for a project type when there is more than 1 item
                      type: string
                    description:
                      description: A description of the project type
                      type: string
                      nullable: true
                    slug:
                      description: 'The slug for project types, used in filtering'
                      type: string
                    icon_class:
                      description: Font Awesome UI icon class
                      type: string
                    environment_urls:
                      description: Indicates that projects of this type have per-environment URLs
                      type: boolean
                    gitlab_project_prefix:
                      description: Prefix for this project type in GitLab
                      type: string
                      nullable: true
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project type records
                  value:
                    - name: HTTP API
                      plural_name: HTTP APIs
                      description: RESTful HTTP 1.1 API
                      icon_class: fab fa-aws
                      slug: http-api
                    - name: Postgres
                      plural_name: Postgres Databases
                      description: A PostgreSQL database
                      icon_class: imbi postgres
                      slug: postgres
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project Type
                  description: |
                    Used to describe the types of operational project_types for projects
                  type: object
                  properties:
                    id:
                      description: The surrogate key for URLs and table linking
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    name:
                      description: The display name for a project type
                      type: string
                    plural_name:
                      description: The display name for a project type when there is more than 1 item
                      type: string
                    description:
                      description: A description of the project type
                      type: string
                      nullable: true
                    slug:
                      description: 'The slug for project types, used in filtering'
                      type: string
                    icon_class:
                      description: Font Awesome UI icon class
                      type: string
                    environment_urls:
                      description: Indicates that projects of this type have per-environment URLs
                      type: boolean
                    gitlab_project_prefix:
                      description: Prefix for this project type in GitLab
                      type: string
                      nullable: true
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project type records
                  value:
                    - name: HTTP API
                      plural_name: HTTP APIs
                      description: RESTful HTTP 1.1 API
                      icon_class: fab fa-aws
                      slug: http-api
                    - name: Postgres
                      plural_name: Postgres Databases
                      description: A PostgreSQL database
                      icon_class: imbi postgres
                      slug: postgres
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project type record
      tags:
        - Project Types
      requestBody:
        description: The project type record to create
        content:
          application/json:
            schema:
              title: Project Type
              description: |
                Used to describe the types of operational project_types for projects
              type: object
              properties:
                name:
                  description: The display name for a project type
                  type: string
                plural_name:
                  description: The display name for a project type when there is more than 1 item
                  type: string
                description:
                  description: A description of the project type
                  type: string
                  nullable: true
                slug:
                  description: 'The slug for project types, used in filtering'
                  type: string
                icon_class:
                  description: Font Awesome UI icon class
                  type: string
                environment_urls:
                  description: Indicates that projects of this type have per-environment URLs
                  type: boolean
                  default: false
                gitlab_project_prefix:
                  description: Prefix for this project type in GitLab
                  type: string
                  nullable: true
              required:
                - name
                - plural_name
                - slug
                - icon_class
                - environment_urls
              additionalProperties: false
            examples:
              record:
                summary: A full project type record
                value:
                  name: HTTP API
                  plural_name: HTTP APIs
                  description: RESTful HTTP 1.1 API
                  slug: http-api
                  icon_class: fab fa-aws
          application/msgpack:
            schema:
              $ref: '#/paths/~1project-types/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full project type record
                value:
                  name: HTTP API
                  plural_name: HTTP APIs
                  description: RESTful HTTP 1.1 API
                  slug: http-api
                  icon_class: fab fa-aws
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project type was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1project-types/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A full project type record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    name: HTTP API
                    plural_name: HTTP APIs
                    description: RESTful HTTP 1.1 API
                    slug: http-api
                    icon_class: fab fa-aws
            application/msgpack:
              schema:
                $ref: '#/paths/~1project-types/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A full project type record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    name: HTTP API
                    plural_name: HTTP APIs
                    description: RESTful HTTP 1.1 API
                    slug: http-api
                    icon_class: fab fa-aws
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/project-types/{id}':
    get:
      summary: Get Record
      description: Retrieve a project type record
      tags:
        - Project Types
      responses:
        '200':
          $ref: '#/paths/~1project-types/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a project type, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Project Types
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1project-types/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project type record
      tags:
        - Project Types
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Project Type ID
        required: true
        schema:
          type: number
  /projects:
    get:
      description: Retrieve the collection of projects
      summary: Get Collection
      tags:
        - Projects
      parameters:
        - name: namespace_id
          in: query
          description: Filter by Namespace ID
          schema:
            type: integer
        - name: project_type_id
          in: query
          description: Filter by Namespace ID
          schema:
            type: integer
        - name: name
          in: query
          description: Filter by Name
          schema:
            type: string
        - name: include_archived
          in: query
          description: Set to `true` to include archived values
          schema:
            type: boolean
        - name: sonarqube_project_key
          in: query
          description: Filter by SonarQube Project Key
          schema:
            type: string
        - name: sort
          in: query
          description: |-
            A comma delimited filter of column and sort direction.

            **Valid Sort Columns**

              - `namespace`
              - `project_type`
              - `name`
              - `project_score`

            **Valid Directions**

              - `asc`
              - `desc`

            **Example Value**

              `namespace asc, name desc`
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the number of records returned
          schema:
            type: number
        - name: offset
          in: query
          description: The starting offset for the records returned
          schema:
            type: number
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Project
                      description: Describes a project managed by Imbi
                      type: object
                      properties:
                        id:
                          description: The project ID
                          type: number
                        created_by:
                          description: The user that created the record
                          type: string
                        last_modified_by:
                          description: The user that last modified the record
                          type: string
                        namespace_id:
                          description: The project namespace ID
                          type: number
                        namespace:
                          description: The namespace name
                          type: string
                        project_type_id:
                          description: The project type ID
                          type: number
                        project_type:
                          description: The project type name
                          type: string
                        name:
                          description: The project name
                          type: string
                        slug:
                          description: The project URL slug (In GitLab and other projects)
                          type: string
                          pattern: '^[\w-]+$'
                        description:
                          description: Long for description of the project
                          type: string
                          nullable: true
                        environments:
                          description: The operational environments the project is available in
                          type: array
                          items:
                            type: string
                          nullable: true
                        archived:
                          description: Indicates that the project is archived
                          type: boolean
                        gitlab_project_id:
                          description: Optional project ID for the associated gitlab project
                          type: integer
                          nullable: true
                        sentry_project_slug:
                          description: Optional slug for the project in sentry
                          type: string
                          nullable: true
                        sonarqube_project_key:
                          description: Optional slug for the project in SonarQube
                          type: string
                          nullable: true
                        pagerduty_service_id:
                          description: Optional ID for the project in PagerDuty
                          type: string
                          nullable: true
                        configuration_type:
                          description: Optional configuration system for the project
                          type: string
                          nullable: true
                      additionalProperties: false
                  rows:
                    type: number
                    description: 'Count of projects matching the query parameter filters, ignoring limit. This can be used to determine whether there are more projects to fetch with offset.'
              examples:
                record:
                  summary: Multiple project records
                  value:
                    data:
                      - id: 1
                        created_by: test_user
                        last_modified_by: null
                        namespace_id: 1
                        namespace: Applications
                        project_type_id: 1
                        project_type: HTTP API
                        name: User Service
                        slug: user
                        description: 'The user service is used to manage user specific data, including profiles and content.'
                        environments:
                          - Testing
                          - Staging
                          - Production
                        archived: false
                        configuration_type: ssm
                    rows: 1
            application/msgpack:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Project
                      description: Describes a project managed by Imbi
                      type: object
                      properties:
                        id:
                          description: The project ID
                          type: number
                        created_by:
                          description: The user that created the record
                          type: string
                        last_modified_by:
                          description: The user that last modified the record
                          type: string
                        namespace_id:
                          description: The project namespace ID
                          type: number
                        namespace:
                          description: The namespace name
                          type: string
                        project_type_id:
                          description: The project type ID
                          type: number
                        project_type:
                          description: The project type name
                          type: string
                        name:
                          description: The project name
                          type: string
                        slug:
                          description: The project URL slug (In GitLab and other projects)
                          type: string
                          pattern: '^[\w-]+$'
                        description:
                          description: Long for description of the project
                          type: string
                          nullable: true
                        environments:
                          description: The operational environments the project is available in
                          type: array
                          items:
                            type: string
                          nullable: true
                        archived:
                          description: Indicates that the project is archived
                          type: boolean
                        gitlab_project_id:
                          description: Optional project ID for the associated gitlab project
                          type: integer
                          nullable: true
                        sentry_project_slug:
                          description: Optional slug for the project in sentry
                          type: string
                          nullable: true
                        sonarqube_project_key:
                          description: Optional slug for the project in SonarQube
                          type: string
                          nullable: true
                        pagerduty_service_id:
                          description: Optional ID for the project in PagerDuty
                          type: string
                          nullable: true
                        configuration_type:
                          description: Optional configuration system for the project
                          type: string
                          nullable: true
                      additionalProperties: false
                  rows:
                    type: number
                    description: 'Count of projects matching the query parameter filters, ignoring limit. This can be used to determine whether there are more projects to fetch with offset.'
              examples:
                record:
                  summary: Multiple project records
                  value:
                    data:
                      - id: 1
                        created_by: test_user
                        last_modified_by: null
                        namespace_id: 1
                        namespace: Applications
                        project_type_id: 1
                        project_type: HTTP API
                        name: User Service
                        slug: user
                        description: 'The user service is used to manage user specific data, including profiles and content.'
                        environments:
                          - Testing
                          - Staging
                          - Production
                        archived: false
                        configuration_type: ssm
                    rows: 1
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project record
      tags:
        - Projects
      requestBody:
        description: The project record to create
        content:
          application/json:
            schema:
              title: Project
              description: Describes a project managed by Imbi
              type: object
              properties:
                namespace_id:
                  description: The project namespace ID
                  type: number
                project_type_id:
                  description: The project type ID
                  type: number
                name:
                  description: The project name
                  type: string
                slug:
                  description: The project URL slug (In GitLab and other projects)
                  type: string
                  pattern: '^[\w-]+$'
                description:
                  description: Long for description of the project
                  type: string
                  nullable: true
                environments:
                  description: The operational environments the project is available in
                  type: array
                  items:
                    type: string
                  minLength: 1
                  nullable: true
                automations:
                  description: List of project creation automations to run while creating the project
                  type: array
                  items:
                    type: string
                  nullable: true
              required:
                - namespace_id
                - project_type_id
                - name
                - slug
              additionalProperties: false
            examples:
              record:
                summary: An example of the payload for creating a record
                value:
                  namespace_id: 1
                  name: User Service
                  slug: user
                  description: 'The user service is used to manage user specific data, including profiles and content.'
                  project_type_id: 1
                  environments:
                    - Testing
                    - Staging
                    - Production
          application/msgpack:
            schema:
              $ref: '#/paths/~1projects/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: An example of the payload for creating a record
                value:
                  namespace_id: 1
                  name: User Service
                  slug: user
                  description: 'The user service is used to manage user specific data, including profiles and content.'
                  project_type_id: 1
                  environments:
                    - Testing
                    - Staging
                    - Production
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1projects/get/responses/200/content/application~1json/schema/properties/data/items'
              examples:
                record:
                  summary: An example of a project record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    namespace_id: 1
                    namespace: User Experience
                    project_type_id: 1
                    project_type: HTTP API
                    name: User Service
                    slug: user
                    description: 'The user service is used to manage user specific data, including profiles and content.'
                    environments:
                      - Testing
                      - Staging
                      - Production
                    archived: false
                    configuration_type: ssm
            application/msgpack:
              schema:
                $ref: '#/paths/~1projects/get/responses/200/content/application~1json/schema/properties/data/items'
              examples:
                record:
                  summary: An example of a project record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    namespace_id: 1
                    namespace: User Experience
                    project_type_id: 1
                    project_type: HTTP API
                    name: User Service
                    slug: user
                    description: 'The user service is used to manage user specific data, including profiles and content.'
                    environments:
                      - Testing
                      - Staging
                      - Production
                    archived: false
                    configuration_type: ssm
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/projects/{id}':
    get:
      summary: Get Record
      description: Retrieve a project record
      tags:
        - Projects
      responses:
        '200':
          $ref: '#/paths/~1projects/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a project, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Projects
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1projects/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project record and all of its children
      tags:
        - Projects
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Project ID
        required: true
        schema:
          type: number
  '/projects/{id}/components':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Retrieve project components
      description: Retrieve the set of components that a project uses
      tags:
        - Components
        - Projects
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Project components
                description: List of components that this project uses
                type: array
                items:
                  type: object
                  properties:
                    package_url:
                      description: Unique identifies the component
                      type: string
                      pattern: '^pkg:'
                    name:
                      description: Human-readable name of this component
                      type: string
                    version:
                      description: Version number that the project requires
                      type: string
                    status:
                      description: Status for this version of this component
                      type: string
                      enum:
                        - Active
                        - Deprecated
                        - Forbidden
                    icon_class:
                      description: Optional Font Awesome icon class
                      type: string
                      nullable: true
                    score:
                      description: |
                        Score for this component

                        If this property is `null`, then this component is not included
                        in the total project score calculation.
                      type: integer
                      minimum: 0
                      maximum: 100
                      nullable: true
                    link:
                      description: Link to the component
                      type: string
                      format: uri
                  required:
                    - package_url
                    - name
                    - version
                    - status
                    - icon_class
                    - score
                  example:
                    package_url: 'pkg:pypi:imbi'
                    name: Imbi
                    version: 0.21.1
                    status: Active
                    icon_class: imbi imbi
                    score: 100
            application/msgpack:
              schema:
                title: Project components
                description: List of components that this project uses
                type: array
                items:
                  type: object
                  properties:
                    package_url:
                      description: Unique identifies the component
                      type: string
                      pattern: '^pkg:'
                    name:
                      description: Human-readable name of this component
                      type: string
                    version:
                      description: Version number that the project requires
                      type: string
                    status:
                      description: Status for this version of this component
                      type: string
                      enum:
                        - Active
                        - Deprecated
                        - Forbidden
                    icon_class:
                      description: Optional Font Awesome icon class
                      type: string
                      nullable: true
                    score:
                      description: |
                        Score for this component

                        If this property is `null`, then this component is not included
                        in the total project score calculation.
                      type: integer
                      minimum: 0
                      maximum: 100
                      nullable: true
                    link:
                      description: Link to the component
                      type: string
                      format: uri
                  required:
                    - package_url
                    - name
                    - version
                    - status
                    - icon_class
                    - score
                  example:
                    package_url: 'pkg:pypi:imbi'
                    name: Imbi
                    version: 0.21.1
                    status: Active
                    icon_class: imbi imbi
                    score: 100
          headers:
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
      parameters:
        - name: limit
          in: query
          description: Optional page size
          required: false
          schema:
            type: integer
            minimum: 1
        - name: token
          in: query
          description: |
            Pagination token

            This is returned in the `"next"` link
          required: false
          schema:
            type: string
  '/projects/{id}/configuration/ssm':
    parameters:
      - name: id
        in: path
        description: ID of the project to get parameters for
        required: true
        schema:
          type: number
    get:
      description: Retrieve the SSM parameters for the project
      summary: Get SSM Parameters
      tags:
        - Project Configuration
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Project SSM Configuration
                description: SSM parameters for the project
                type: array
                items:
                  description: The SSM parameter
                  type: object
                  properties:
                    name:
                      description: The SSM parameter path
                      type: string
                    values:
                      description: The parameter values in each environment
                      type: object
                      additionalProperties:
                        type: object
                        properties:
                          value:
                            description: The parameter value
                            type: string
                          type:
                            description: The SSM parameter type
                            type: string
                            enum:
                              - String
                              - SecureString
                              - StringList
                        additionalProperties: false
                        required:
                          - value
                          - type
                    self:
                      description: 'URL referring to this parameter for this project, with SSM name URL-encoded'
                      type: string
                  additionalProperties: false
                  required:
                    - self
                    - name
                    - values
              examples:
                records:
                  value:
                    - name: foo/bar/baz
                      values:
                        Testing:
                          value: '42'
                          type: String
                        Production:
                          value: '9001'
                          type: String
                      self: 'https://imbi.com/project/3/configuration/ssm/foo%2Fbar%2Fbaz'
                    - name: biz/bap/boop
                      values:
                        Testing:
                          value: password
                          type: SecureString
                        Production:
                          value: password123$
                          type: SecureString
                      self: 'https://imbi.com/project/3/configuration/ssm/biz%2Fbap%2Fboop'
            application/msgpack:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1configuration~1ssm/get/responses/200/content/application~1json/schema'
              examples:
                records:
                  value:
                    - name: foo/bar/baz
                      values:
                        Testing:
                          value: '42'
                          type: String
                        Production:
                          value: '9001'
                          type: String
                      self: 'https://imbi.com/project/3/configuration/ssm/foo%2Fbar%2Fbaz'
                    - name: biz/bap/boop
                      values:
                        Testing:
                          value: password
                          type: SecureString
                        Production:
                          value: password123$
                          type: SecureString
                      self: 'https://imbi.com/project/3/configuration/ssm/biz%2Fbap%2Fboop'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    post:
      description: Create a set of new SSM parameters for a name
      summary: Create SSM params
      tags:
        - Project Configuration
      requestBody:
        description: Parameters to create
        content:
          application/json:
            schema:
              title: Project SSM Configuration
              description: SSM parameters for a given name
              type: object
              properties:
                name:
                  description: The SSM parameter path after the project prefix
                  type: string
                type:
                  description: The SSM parameter type
                  type: string
                  enum:
                    - String
                    - SecureString
                    - StringList
                values:
                  description: The parameter values in each environment
                  type: object
                  additionalProperties:
                    type: string
              additionalProperties: false
              required:
                - name
                - type
                - values
            example:
              name: foo/bar/baz
              type: String
              values:
                Testing: '42'
                Production: '9001'
          application/msgpack:
            schema:
              $ref: '#/paths/~1projects~1%7Bid%7D~1configuration~1ssm/post/requestBody/content/application~1json/schema'
            example:
              name: foo/bar/baz
              type: String
              values:
                Testing: '42'
                Production: '9001'
      responses:
        '204':
          description: The request to add SSM parameters was successful
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    delete:
      summary: Delete a set of SSM parameters
      description: Delete SSM params
      tags:
        - Project Configuration
      requestBody:
        description: Parameters to delete
        content:
          application/json:
            schema:
              title: Project SSM Configuration
              description: SSM parameters for a given name
              type: object
              properties:
                name:
                  description: The SSM parameter path after the project prefix
                  type: string
                environments:
                  type: array
                  items:
                    description: Environments to delete this parameter in
                    type: string
              additionalProperties: false
              required:
                - name
                - environments
            example:
              name: foo/bar/baz
              environments:
                - Testing
                - Production
          application/msgpack:
            schema:
              $ref: '#/paths/~1projects~1%7Bid%7D~1configuration~1ssm/delete/requestBody/content/application~1json/schema'
            example:
              name: foo/bar/baz
              environments:
                - Testing
                - Production
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
  '/projects/{id}/facts':
    get:
      description: Retrieve the current facts for a project
      summary: Get Facts
      tags:
        - Project Facts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project Fact
                  description: Describes a fact about a project
                  type: object
                  properties:
                    fact_type_id:
                      description: The ID of the fact type that is being set
                      type: integer
                    fact_name:
                      type: string
                    recorded_at:
                      description: When the fact was recorded
                      type: string
                      format: iso8601-timestamp
                    recorded_by:
                      description: The user that set the fact value
                      type: string
                    value:
                      description: The fact value
                      oneOf:
                        - type: boolean
                        - type: integer
                        - type: number
                          format: double
                        - type: string
                    score:
                      description: The score for the value of the fact
                      type: integer
                    weight:
                      description: The weight of the score against all the other project facts
                      type: integer
                  additionalProperties: false
              examples:
                facts:
                  summary: All the current facts for a project
                  value:
                    - fact_type_id: 1
                      fact_name: Programming Language
                      recorded_at: 2021-03-01T12:00:00.000Z
                      recorded_by: test_user
                      value: Python 3.9
                      score: 100
                      weight: 25
                    - fact_type_id: 2
                      fact_name: Test Coverage
                      recorded_at: 2021-03-01T12:00:01.000Z
                      recorded_by: test_user
                      value: 95.6
                      score: 100
                      weight: 15
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project Fact
                  description: Describes a fact about a project
                  type: object
                  properties:
                    fact_type_id:
                      description: The ID of the fact type that is being set
                      type: integer
                    fact_name:
                      type: string
                    recorded_at:
                      description: When the fact was recorded
                      type: string
                      format: iso8601-timestamp
                    recorded_by:
                      description: The user that set the fact value
                      type: string
                    value:
                      description: The fact value
                      oneOf:
                        - type: boolean
                        - type: integer
                        - type: number
                          format: double
                        - type: string
                    score:
                      description: The score for the value of the fact
                      type: integer
                    weight:
                      description: The weight of the score against all the other project facts
                      type: integer
                  additionalProperties: false
              examples:
                facts:
                  summary: All the current facts for a project
                  value:
                    - fact_type_id: 1
                      fact_name: Programming Language
                      recorded_at: 2021-03-01T12:00:00.000Z
                      recorded_by: test_user
                      value: Python 3.9
                      score: 100
                      weight: 25
                    - fact_type_id: 2
                      fact_name: Test Coverage
                      recorded_at: 2021-03-01T12:00:01.000Z
                      recorded_by: test_user
                      value: 95.6
                      score: 100
                      weight: 15
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Set Facts
      description: Set one or more project facts
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                title: Project Fact
                description: Describes a fact about a project
                type: object
                properties:
                  fact_type_id:
                    description: The ID of the fact type that is being set
                    type: integer
                  value:
                    description: The fact value
                    oneOf:
                      - type: boolean
                      - type: integer
                      - type: number
                        format: double
                      - type: string
                required:
                  - fact_type_id
                  - value
                additionalProperties: false
            examples:
              facts:
                summary: A payload example for setting multiple project facts
                value:
                  - fact_type_id: 1
                    value: Python 3.9
                  - fact_type_id: 2
                    value: 96.5
          application/msgpack:
            schema:
              type: array
              items:
                title: Project Fact
                description: Describes a fact about a project
                type: object
                properties:
                  fact_type_id:
                    description: The ID of the fact type that is being set
                    type: integer
                  value:
                    description: The fact value
                    oneOf:
                      - type: boolean
                      - type: integer
                      - type: number
                        format: double
                      - type: string
                required:
                  - fact_type_id
                  - value
                additionalProperties: false
            examples:
              facts:
                summary: A payload example for setting multiple project facts
                value:
                  - fact_type_id: 1
                    value: Python 3.9
                  - fact_type_id: 2
                    value: 96.5
      tags:
        - Project Facts
      responses:
        '204':
          description: The request to record the project fact was successful
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    parameters:
      - name: id
        in: path
        description: Project ID
        required: true
        schema:
          type: integer
  '/projects/{id}/fact-types':
    get:
      description: Retrieve the collection of project fact types for a specific project
      summary: Get Collection
      tags:
        - Project Fact Types
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: The surrogate ID
                      type: number
                    name:
                      description: The project fact type name
                      type: string
                    fact_type:
                      description: Indicates how a fact value is validated and scored
                      type: string
                      enum:
                        - enum
                        - free-form
                        - range
                    description:
                      description: Provides additional context about the fact type
                      type: string
                      nullable: true
                    data_type:
                      description: The data type for the value
                      type: string
                      enum:
                        - boolean
                        - date
                        - decimal
                        - integer
                        - string
                        - timestamp
                    ui_options:
                      description: An array of values that are used in the UI for display purposes
                      type: array
                      items:
                        type: string
                        enum:
                          - display-as-badge
                          - display-as-percentage
                          - hidden
                          - read-only
                      uniqueItems: true
                    enum_values:
                      description: An array of the possible values if the fact type is an enum
                      items:
                        type: string
                      nullable: true
                    min_value:
                      description: The minimum value if this is a range fact type
                      type: number
                      nullable: true
                    max_value:
                      description: The maximum value if this is a range fact type
                      type: number
                      nullable: true
                    weight:
                      description: The weight of the fact type when computing a project score
                      type: number
                      default: 0
              examples:
                records:
                  summary: Multiple project fact type records
                  value:
                    - id: 1
                      name: Programming Language
                      fact_type: enum
                      description: null
                      ui_options: []
                      enum_values:
                        - Python 3.9
                        - Python 3.8
                      min_value: 0
                      max_value: 100
                      weight: 25
                    - id: 2
                      name: Test Coverage
                      data_type: boolean
                      fact_type: range
                      description: null
                      ui_options: []
                      enum_values: null
                      min_value: 0
                      max_value: 100
                      weight: 25
                    - id: 3
                      name: Deployed to all Environments
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      enum_values:
                        - true
                        - false
                      min_value: null
                      max_value: null
                      weight: 20
                    - id: 4
                      name: Has Acceptance Tests
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      enum_values:
                        - true
                        - false
                      min_value: null
                      max_value: null
                      weight: 10
                    - id: 5
                      name: Meets Current Standards
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      enum_values:
                        - true
                        - false
                      min_value: null
                      max_value: null
                      weight: 10
                    - id: 6
                      name: Has working CI pipeline
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      enum_values:
                        - true
                        - false
                      min_value: null
                      max_value: null
                      weight: 10
            application/msgpack:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: The surrogate ID
                      type: number
                    name:
                      description: The project fact type name
                      type: string
                    fact_type:
                      description: Indicates how a fact value is validated and scored
                      type: string
                      enum:
                        - enum
                        - free-form
                        - range
                    description:
                      description: Provides additional context about the fact type
                      type: string
                      nullable: true
                    data_type:
                      description: The data type for the value
                      type: string
                      enum:
                        - boolean
                        - date
                        - decimal
                        - integer
                        - string
                        - timestamp
                    ui_options:
                      description: An array of values that are used in the UI for display purposes
                      type: array
                      items:
                        type: string
                        enum:
                          - display-as-badge
                          - display-as-percentage
                          - hidden
                          - read-only
                      uniqueItems: true
                    enum_values:
                      description: An array of the possible values if the fact type is an enum
                      items:
                        type: string
                      nullable: true
                    min_value:
                      description: The minimum value if this is a range fact type
                      type: number
                      nullable: true
                    max_value:
                      description: The maximum value if this is a range fact type
                      type: number
                      nullable: true
                    weight:
                      description: The weight of the fact type when computing a project score
                      type: number
                      default: 0
              examples:
                records:
                  summary: Multiple project fact type records
                  value:
                    - id: 1
                      name: Programming Language
                      fact_type: enum
                      description: null
                      ui_options: []
                      enum_values:
                        - Python 3.9
                        - Python 3.8
                      min_value: 0
                      max_value: 100
                      weight: 25
                    - id: 2
                      name: Test Coverage
                      data_type: boolean
                      fact_type: range
                      description: null
                      ui_options: []
                      enum_values: null
                      min_value: 0
                      max_value: 100
                      weight: 25
                    - id: 3
                      name: Deployed to all Environments
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      enum_values:
                        - true
                        - false
                      min_value: null
                      max_value: null
                      weight: 20
                    - id: 4
                      name: Has Acceptance Tests
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      enum_values:
                        - true
                        - false
                      min_value: null
                      max_value: null
                      weight: 10
                    - id: 5
                      name: Meets Current Standards
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      enum_values:
                        - true
                        - false
                      min_value: null
                      max_value: null
                      weight: 10
                    - id: 6
                      name: Has working CI pipeline
                      fact_type: enum
                      data_type: boolean
                      description: null
                      ui_options: []
                      enum_values:
                        - true
                        - false
                      min_value: null
                      max_value: null
                      weight: 10
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    parameters:
      - name: id
        in: path
        description: Project ID
        required: true
        schema:
          type: integer
  '/projects/{id}/fact-history':
    get:
      description: Retrieve the fact history for the given project
      summary: Get Fact History
      tags:
        - Project Fact History
      parameters:
        - name: id
          in: path
          description: Project ID
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit the number of records returned
          schema:
            type: number
        - name: offset
          in: query
          description: The starting offset for the records returned
          schema:
            type: number
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    fact_type_id:
                      description: The fact type ID
                      type: number
                    recorded_at:
                      description: When the fact was recorded
                      type: string
                      format: iso8601-timestamp
                    recorded_by:
                      description: The user that set the fact value
                      type: string
                    value:
                      description: The fact value
                      oneOf:
                        - type: boolean
                        - type: integer
                        - type: number
                          format: double
                        - type: string
                    score:
                      description: The score for the value of the fact
                      type: integer
                    weight:
                      description: The weight of the score against all the other project facts
                      type: integer
                    icon_class:
                      description: The Font Awesome icon class for the link
                      type: string
              examples:
                records:
                  summary: Fact history
                  value:
                    - fact_type_id: 1
                      recorded_at: 2021-03-01T12:00:00.000Z
                      recorded_by: test_user
                      value: Ansible
                      score: 100
                      weight: 5
                      icon_class: fab ansible
                    - fact_type_id: 7
                      recorded_at: 2021-03-01T12:00:01.000Z
                      recorded_by: test_user
                      value: GitLab CI
                      score: 100
                      weight: 10
                      icon_class: fab gitlab
            application/msgpack:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    fact_type_id:
                      description: The fact type ID
                      type: number
                    recorded_at:
                      description: When the fact was recorded
                      type: string
                      format: iso8601-timestamp
                    recorded_by:
                      description: The user that set the fact value
                      type: string
                    value:
                      description: The fact value
                      oneOf:
                        - type: boolean
                        - type: integer
                        - type: number
                          format: double
                        - type: string
                    score:
                      description: The score for the value of the fact
                      type: integer
                    weight:
                      description: The weight of the score against all the other project facts
                      type: integer
                    icon_class:
                      description: The Font Awesome icon class for the link
                      type: string
              examples:
                records:
                  summary: Fact history
                  value:
                    - fact_type_id: 1
                      recorded_at: 2021-03-01T12:00:00.000Z
                      recorded_by: test_user
                      value: Ansible
                      score: 100
                      weight: 5
                      icon_class: fab ansible
                    - fact_type_id: 7
                      recorded_at: 2021-03-01T12:00:01.000Z
                      recorded_by: test_user
                      value: GitLab CI
                      score: 100
                      weight: 10
                      icon_class: fab gitlab
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  '/projects/{id}/feed':
    get:
      description: Retrieve the most recent changes for a project ordered in descending order.
      summary: Get Activity Feed
      tags:
        - Project Activity Feed
      parameters:
        - name: id
          in: path
          description: Project ID
          required: true
          schema:
            type: number
        - name: limit
          in: query
          description: Limit the number of records returned
          schema:
            type: number
            default: 25
        - name: token
          in: query
          description: Opaque pagination token
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/paths/~1activity-feed/get/responses/200/content/application~1json/schema/items/oneOf/0'
                    - $ref: '#/paths/~1operations-log/get/responses/200/content/application~1json/schema/items'
              examples:
                records:
                  summary: Feed entries
                  value:
                    - when: 2021-03-18T03:02:00.912Z
                      type: ProjectFeedEntry
                      display_name: Gavin Roy
                      who: gavinr
                      what: updated fact
                      fact_name: Programming Language
                      value: ES2015+
                    - id: 1
                      recorded_at: 2021-03-18T03:00:01.520Z
                      recorded_by: gavinr
                      email_address: gavinr@example.com
                      type: OperationsLogEntry
                      display_name: Gavin M Roy
                      completed_at: null
                      project_id: 1
                      project_name: Imbi UI
                      environment: Testing
                      change_type: Deployment
                      description: Added the Operations Log functionality
                      notes: null
                      ticket_slug: null
                      version: 0.0.0
                    - when: 2021-03-18T02:55:50.865Z
                      type: ProjectFeedEntry
                      display_name: Gavin Roy
                      who: gavinr
                      what: created
                      fact_name: null
                      value: null
            application/msgpack:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/paths/~1activity-feed/get/responses/200/content/application~1json/schema/items/oneOf/0'
                    - $ref: '#/paths/~1operations-log/get/responses/200/content/application~1json/schema/items'
              examples:
                records:
                  summary: Feed entries
                  value:
                    - when: 2021-03-18T03:02:00.912Z
                      type: ProjectFeedEntry
                      display_name: Gavin Roy
                      who: gavinr
                      what: updated fact
                      fact_name: Programming Language
                      value: ES2015+
                    - id: 1
                      recorded_at: 2021-03-18T03:00:01.520Z
                      recorded_by: gavinr
                      email_address: gavinr@example.com
                      type: OperationsLogEntry
                      display_name: Gavin M Roy
                      completed_at: null
                      project_id: 1
                      project_name: Imbi UI
                      environment: Testing
                      change_type: Deployment
                      description: Added the Operations Log functionality
                      notes: null
                      ticket_slug: null
                      version: 0.0.0
                    - when: 2021-03-18T02:55:50.865Z
                      type: ProjectFeedEntry
                      display_name: Gavin Roy
                      who: gavinr
                      what: created
                      fact_name: null
                      value: null
          headers:
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  '/projects/{id}/identifiers':
    parameters:
      - name: id
        in: path
        description: Project ID
        required: true
        schema:
          type: integer
    get:
      description: Retrieve surrogate identifiers for the project
      summary: Get Identifiers
      tags:
        - Project Facts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    external_id:
                      type: string
                    integration_name:
                      type: string
                    created_by:
                      type: string
                    created_at:
                      type: string
                      format: iso8601-timestamp
                    modified_by:
                      type: string
                      nullable: true
                    modified_at:
                      type: string
                      format: iso8601-timestamp
                      nullable: true
                  required:
                    - external_id
                    - integration_name
                    - created_by
                    - created_at
                    - modified_by
                    - modified_at
                  additionalProperties: true
            application/msgpack:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    external_id:
                      type: string
                    integration_name:
                      type: string
                    created_by:
                      type: string
                    created_at:
                      type: string
                      format: iso8601-timestamp
                    modified_by:
                      type: string
                      nullable: true
                    modified_at:
                      type: string
                      format: iso8601-timestamp
                      nullable: true
                  required:
                    - external_id
                    - integration_name
                    - created_by
                    - created_at
                    - modified_by
                    - modified_at
                  additionalProperties: true
    post:
      description: Add a surrogate identifier for a project
      summary: Add Identifier
      tags:
        - Project Facts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                external_id:
                  type: string
                integration_name:
                  type: string
              required:
                - external_id
                - integration_name
              additionalProperties: false
          application/msgpack:
            schema:
              type: object
              properties:
                external_id:
                  type: string
                integration_name:
                  type: string
              required:
                - external_id
                - integration_name
              additionalProperties: false
      responses:
        '200':
          description: Newly created identifier
          content:
            application/json:
              schema:
                type: object
            application/msgpack:
              schema:
                type: object
  '/projects/{id}/identifiers/{integration}':
    parameters:
      - name: id
        in: path
        description: Project ID
        required: true
        schema:
          type: integer
      - name: integration
        in: path
        description: Integration name
        required: true
        schema:
          type: string
    get:
      description: Retrieve a specific surrogate identifier for the project
      summary: Get Identifier
      tags:
        - Project Facts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  external_id:
                    type: string
                  created_by:
                    type: string
                  created_at:
                    type: string
                    format: iso8601-timestamp
                  modified_by:
                    type: string
                    nullable: true
                  modified_at:
                    type: string
                    format: iso8601-timestamp
                    nullable: true
                required:
                  - external_id
                  - created_by
                  - created_at
                  - modified_by
                  - modified_at
                additionalProperties: true
            application/msgpack:
              schema:
                type: object
                properties:
                  external_id:
                    type: string
                  created_by:
                    type: string
                  created_at:
                    type: string
                    format: iso8601-timestamp
                  modified_by:
                    type: string
                    nullable: true
                  modified_at:
                    type: string
                    format: iso8601-timestamp
                    nullable: true
                required:
                  - external_id
                  - created_by
                  - created_at
                  - modified_by
                  - modified_at
                additionalProperties: true
    patch:
      description: Update a specific surrogate identifier for the project
      summary: Update identifier
      tags:
        - Project Facts
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          description: Updated identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  external_id:
                    type: string
                  created_by:
                    type: string
                  created_at:
                    type: string
                    format: iso8601-timestamp
                  modified_by:
                    type: string
                    nullable: true
                  modified_at:
                    type: string
                    format: iso8601-timestamp
                    nullable: true
                required:
                  - external_id
                  - created_by
                  - created_at
                  - modified_by
                  - modified_at
                additionalProperties: true
            application/msgpack:
              schema:
                type: object
                properties:
                  external_id:
                    type: string
                  created_by:
                    type: string
                  created_at:
                    type: string
                    format: iso8601-timestamp
                  modified_by:
                    type: string
                    nullable: true
                  modified_at:
                    type: string
                    format: iso8601-timestamp
                    nullable: true
                required:
                  - external_id
                  - created_by
                  - created_at
                  - modified_by
                  - modified_at
                additionalProperties: true
    delete:
      description: Remove the surrogate identifier for the project in a specified integration
      summary: Remove identifier
      tags:
        - Project Facts
      responses:
        '204':
          description: Identifier removed
  '/projects/{id}/links':
    get:
      description: Retrieve the collection of links for a project
      summary: Get Collection
      tags:
        - Project Links
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project Link
                  description: Links related to the project
                  type: object
                  properties:
                    project_id:
                      description: The project ID
                      type: number
                    link_type_id:
                      description: The link type ID
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    link_type:
                      description: The link type
                      type: string
                    icon_class:
                      description: The Font Awesome icon class for the link
                      type: string
                    url:
                      description: The link URL
                      type: string
                      format: uri
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple group records
                  value:
                    - project_id: 1
                      link_type_id: 1
                      created_by: test_user
                      last_modified_by: null
                      link_type: Documentation
                      icon_class: fas book
                      url: 'https://imbi.readthedocs.io'
                    - project_id: 1
                      link_type_id: 2
                      created_by: test_user
                      last_modified_by: null
                      link_type: Repository
                      icon_class: fab gitlab
                      url: 'https://gitlab.com/AWeber/Imbi'
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project Link
                  description: Links related to the project
                  type: object
                  properties:
                    project_id:
                      description: The project ID
                      type: number
                    link_type_id:
                      description: The link type ID
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    link_type:
                      description: The link type
                      type: string
                    icon_class:
                      description: The Font Awesome icon class for the link
                      type: string
                    url:
                      description: The link URL
                      type: string
                      format: uri
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple group records
                  value:
                    - project_id: 1
                      link_type_id: 1
                      created_by: test_user
                      last_modified_by: null
                      link_type: Documentation
                      icon_class: fas book
                      url: 'https://imbi.readthedocs.io'
                    - project_id: 1
                      link_type_id: 2
                      created_by: test_user
                      last_modified_by: null
                      link_type: Repository
                      icon_class: fab gitlab
                      url: 'https://gitlab.com/AWeber/Imbi'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project link record
      tags:
        - Project Links
      requestBody:
        description: The project link record to create
        content:
          application/json:
            schema:
              title: Project Link
              description: Links related to the project
              type: object
              properties:
                project_id:
                  description: The project surrogate ID
                  type: number
                link_type_id:
                  description: The link type ID
                  type: number
                url:
                  description: The link URL
                  type: string
                  format: uri
              required:
                - project_id
                - link_type_id
                - url
              additionalProperties: false
            examples:
              record:
                summary: A project link record
                value:
                  project_id: 1
                  link_type_id: 1
                  url: 'https://imbi.readthedocs.io'
          application/msgpack:
            schema:
              $ref: '#/paths/~1projects~1%7Bid%7D~1links/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A project link record
                value:
                  project_id: 1
                  link_type_id: 1
                  url: 'https://imbi.readthedocs.io'
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project link was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1links/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A project link record
                  value:
                    link_type_id: 1
                    created_by: test_user
                    last_modified_by: null
                    link_type: Documentation
                    icon_class: fas book
                    url: 'https://imbi.readthedocs.io'
            application/msgpack:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1links/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A project link record
                  value:
                    link_type_id: 1
                    created_by: test_user
                    last_modified_by: null
                    link_type: Documentation
                    icon_class: fas book
                    url: 'https://imbi.readthedocs.io'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    parameters:
      - name: id
        in: path
        description: The Project ID
        required: true
        schema:
          type: number
  '/projects/{id}/links/{link_type_id}':
    get:
      summary: Get Record
      description: Retrieve a project link record
      tags:
        - Project Links
      responses:
        '200':
          $ref: '#/paths/~1projects~1%7Bid%7D~1links/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a project link, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Project Links
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1projects~1%7Bid%7D~1links/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project link record
      tags:
        - Project Links
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Project ID for the link
        required: true
        schema:
          type: number
      - name: link_type_id
        in: path
        description: The link type
        required: true
        schema:
          type: number
  '/projects/{id}/notes':
    parameters:
      - name: id
        in: path
        required: true
        description: Project ID
        schema:
          type: number
    get:
      summary: Get Collection
      description: Retrieve the notes for a project
      tags:
        - Project Notes
      parameters:
        - name: limit
          description: Maximum number of items to return
          in: query
          schema:
            type: number
            minimum: 1
            default: 100
          required: false
        - name: page_token
          description: opaque pagination token
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1projects~1%7Bid%7D~1notes~1%7Bnote_id%7D/patch/responses/200/content/application~1json/schema'
              example:
                - content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean at libero mauris. Donec a erat malesuada dolor congue ullamcorper non et risus. Etiam vehicula bibendum convallis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Suspendisse posuere purus in odio bibendum cursus. Curabitur vitae iaculis urna. Mauris in urna luctus, interdum sapien nec, ultrices nisl. Aenean pulvinar blandit massa, et sodales nibh accumsan vel. Sed a arcu nisi. Nulla efficitur diam eu diam finibus faucibus eget in dolor. Donec quis euismod nisi. Donec placerat, leo nec elementum pretium, tellus lorem tristique ante, eget malesuada justo diam eu magna. Pellentesque mattis bibendum dapibus. Duis sed nisl eu erat fermentum vehicula vel a urna. Nullam lectus neque, egestas id eleifend et, tincidunt ut est. In sollicitudin elementum pharetra.'
                  created_by: test
                  id: 1
                  project_id: 1
                  updated_by: null
          headers:
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
    post:
      summary: Create Record
      description: Create a new note for a project
      tags:
        - Project Notes
      requestBody:
        description: Note content
        content:
          application/json:
            schema:
              title: Project Note
              description: User generated note about a project
              type: object
              properties:
                content:
                  description: The note content
                  type: string
              required:
                - content
            example:
              content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean at libero mauris. Donec a erat malesuada dolor congue ullamcorper non et risus. Etiam vehicula bibendum convallis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Suspendisse posuere purus in odio bibendum cursus. Curabitur vitae iaculis urna. Mauris in urna luctus, interdum sapien nec, ultrices nisl. Aenean pulvinar blandit massa, et sodales nibh accumsan vel. Sed a arcu nisi. Nulla efficitur diam eu diam finibus faucibus eget in dolor. Donec quis euismod nisi. Donec placerat, leo nec elementum pretium, tellus lorem tristique ante, eget malesuada justo diam eu magna. Pellentesque mattis bibendum dapibus. Duis sed nisl eu erat fermentum vehicula vel a urna. Nullam lectus neque, egestas id eleifend et, tincidunt ut est. In sollicitudin elementum pharetra.'
          application/msgpack:
            schema:
              $ref: '#/paths/~1projects~1%7Bid%7D~1notes/post/requestBody/content/application~1json/schema'
            example:
              content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean at libero mauris. Donec a erat malesuada dolor congue ullamcorper non et risus. Etiam vehicula bibendum convallis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Suspendisse posuere purus in odio bibendum cursus. Curabitur vitae iaculis urna. Mauris in urna luctus, interdum sapien nec, ultrices nisl. Aenean pulvinar blandit massa, et sodales nibh accumsan vel. Sed a arcu nisi. Nulla efficitur diam eu diam finibus faucibus eget in dolor. Donec quis euismod nisi. Donec placerat, leo nec elementum pretium, tellus lorem tristique ante, eget malesuada justo diam eu magna. Pellentesque mattis bibendum dapibus. Duis sed nisl eu erat fermentum vehicula vel a urna. Nullam lectus neque, egestas id eleifend et, tincidunt ut est. In sollicitudin elementum pharetra.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1notes~1%7Bnote_id%7D/patch/responses/200/content/application~1json/schema'
              example:
                content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean at libero mauris. Donec a erat malesuada dolor congue ullamcorper non et risus. Etiam vehicula bibendum convallis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Suspendisse posuere purus in odio bibendum cursus. Curabitur vitae iaculis urna. Mauris in urna luctus, interdum sapien nec, ultrices nisl. Aenean pulvinar blandit massa, et sodales nibh accumsan vel. Sed a arcu nisi. Nulla efficitur diam eu diam finibus faucibus eget in dolor. Donec quis euismod nisi. Donec placerat, leo nec elementum pretium, tellus lorem tristique ante, eget malesuada justo diam eu magna. Pellentesque mattis bibendum dapibus. Duis sed nisl eu erat fermentum vehicula vel a urna. Nullam lectus neque, egestas id eleifend et, tincidunt ut est. In sollicitudin elementum pharetra.'
                created_by: test
                id: 1
                project_id: 1
                updated_by: null
            application/msgpack:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1notes~1%7Bnote_id%7D/patch/responses/200/content/application~1json/schema'
              example:
                content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean at libero mauris. Donec a erat malesuada dolor congue ullamcorper non et risus. Etiam vehicula bibendum convallis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Suspendisse posuere purus in odio bibendum cursus. Curabitur vitae iaculis urna. Mauris in urna luctus, interdum sapien nec, ultrices nisl. Aenean pulvinar blandit massa, et sodales nibh accumsan vel. Sed a arcu nisi. Nulla efficitur diam eu diam finibus faucibus eget in dolor. Donec quis euismod nisi. Donec placerat, leo nec elementum pretium, tellus lorem tristique ante, eget malesuada justo diam eu magna. Pellentesque mattis bibendum dapibus. Duis sed nisl eu erat fermentum vehicula vel a urna. Nullam lectus neque, egestas id eleifend et, tincidunt ut est. In sollicitudin elementum pharetra.'
                created_by: test
                id: 1
                project_id: 1
                updated_by: null
  '/projects/{id}/notes/{note_id}':
    parameters:
      - $ref: '#/paths/~1projects~1%7Bid%7D~1notes/parameters/0'
      - name: note_id
        description: Unique identifier for the note
        in: path
        required: true
        schema:
          type: number
    get:
      summary: Get Record
      description: Retrieve a note by its ID
      tags:
        - Project Notes
      responses:
        '200':
          $ref: '#/paths/~1projects~1%7Bid%7D~1notes/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: Update a specific note
      tags:
        - Project Notes
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          description: Note was updated
          content:
            application/json:
              schema:
                title: Project Note
                description: User generated note about a project
                type: object
                properties:
                  id:
                    description: The note identifier
                    type: integer
                  project_id:
                    description: Identifies the project that this note is associated with
                    type: integer
                  content:
                    description: The note content
                    type: string
                  created_by:
                    description: The user that created the note
                    type: string
                  updated_by:
                    description: The user that most recently modified the note
                    type: string
                    nullable: true
                required:
                  - content
                  - created_by
                  - id
                  - project_id
              example:
                content: 'Bacon ipsum dolor amet alcatra tongue shankle, beef ribs ribeye filet mignon drumstick landjaeger capicola andouille pancetta meatloaf cupim bresaola rump. Pork belly ham turkey, salami prosciutto ribeye beef ribs swine ground round pork loin leberkas tri-tip pig cow pastrami. Prosciutto tri-tip strip steak cow. Shankle hamburger kevin, pig meatloaf burgdoggen kielbasa ball tip pastrami tongue sirloin corned beef turducken flank porchetta. Filet mignon bacon chislic, chicken burgdoggen cow pig. Landjaeger chicken jowl kielbasa bresaola bacon. Spare ribs turkey prosciutto boudin pastrami pancetta leberkas.'
                created_by: test
                id: 1
                project_id: 1
                updated_by: test
            application/msgpack:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1notes~1%7Bnote_id%7D/patch/responses/200/content/application~1json/schema'
              example:
                content: 'Bacon ipsum dolor amet alcatra tongue shankle, beef ribs ribeye filet mignon drumstick landjaeger capicola andouille pancetta meatloaf cupim bresaola rump. Pork belly ham turkey, salami prosciutto ribeye beef ribs swine ground round pork loin leberkas tri-tip pig cow pastrami. Prosciutto tri-tip strip steak cow. Shankle hamburger kevin, pig meatloaf burgdoggen kielbasa ball tip pastrami tongue sirloin corned beef turducken flank porchetta. Filet mignon bacon chislic, chicken burgdoggen cow pig. Landjaeger chicken jowl kielbasa bresaola bacon. Spare ribs turkey prosciutto boudin pastrami pancetta leberkas.'
                created_by: test
                id: 1
                project_id: 1
                updated_by: test
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project note
      tags:
        - Project Notes
      responses:
        '204':
          description: Success
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  '/projects/{id}/dependencies':
    get:
      description: Retrieve the collection of dependencies for a project
      summary: Get Collection
      tags:
        - Project Dependencies
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project
                  description: A record that indicates one project is dependent upon another
                  type: object
                  properties:
                    project_id:
                      description: The ID of the project that has the dependency
                      type: number
                    created_by:
                      description: The username indicating who created the record
                      type: string
                    dependency_id:
                      description: The ID of the project that is depended upon
                      type: number
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple records
                  value:
                    - project_id: 2
                      created_by: test_user
                      dependency_id: 1
                    - project_id: 3
                      created_by: test_user
                      dependency_id: 1
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project
                  description: A record that indicates one project is dependent upon another
                  type: object
                  properties:
                    project_id:
                      description: The ID of the project that has the dependency
                      type: number
                    created_by:
                      description: The username indicating who created the record
                      type: string
                    dependency_id:
                      description: The ID of the project that is depended upon
                      type: number
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple records
                  value:
                    - project_id: 2
                      created_by: test_user
                      dependency_id: 1
                    - project_id: 3
                      created_by: test_user
                      dependency_id: 1
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project dependency record
      tags:
        - Project Dependencies
      requestBody:
        description: The project dependency record to create
        content:
          application/json:
            schema:
              title: Project
              description: A record that indicates one project is dependent upon another
              type: object
              properties:
                dependency_id:
                  description: The ID of the project that is depended upon
                  type: number
              required:
                - dependency_id
              additionalProperties: false
            examples:
              record:
                summary: The payload used when creating a project dependency
                value:
                  dependency_id: 1
          application/msgpack:
            schema:
              $ref: '#/paths/~1projects~1%7Bid%7D~1dependencies/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: The payload used when creating a project dependency
                value:
                  dependency_id: 1
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project dependency was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1dependencies/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A project dependency record
                  value:
                    project_id: 2
                    created_by: test_user
                    dependency_id: 1
            application/msgpack:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1dependencies/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A project dependency record
                  value:
                    project_id: 2
                    created_by: test_user
                    dependency_id: 1
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    parameters:
      - name: id
        in: path
        description: The ID of the project for the dependencies
        required: true
        schema:
          type: number
  '/projects/{id}/dependencies/{dependency_id}':
    get:
      summary: Get Record
      description: Retrieve a project dependency record
      tags:
        - Project Dependencies
      responses:
        '200':
          $ref: '#/paths/~1projects~1%7Bid%7D~1dependencies/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    delete:
      summary: Delete Record
      description: Remove a project dependency record
      tags:
        - Project Dependencies
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: id
        in: path
        description: The ID of the project with the dependency
        required: true
        schema:
          type: number
      - name: dependency_id
        in: path
        description: The ID of the project that is dependend upon
        required: true
        schema:
          type: number
  '/projects/{id}/secrets':
    parameters:
      - name: id
        in: path
        description: ID of the project for the secrets
        required: true
        schema:
          type: number
    get:
      description: Retrieve the collection of secrets for a project
      summary: Get Secrets
      tags:
        - Projects
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project Secret
                  description: Secrets related to the project
                  type: object
                  properties:
                    project_id:
                      description: Identifies the project associated with this secret
                      type: number
                    name:
                      description: Name of this secret
                      type: string
                    project_slug:
                      description: The "slug" of the associated project
                      type: string
                    value:
                      description: Plaintext value of this secret
                      type: string
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                      format: datetime
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project Secret
                  description: Secrets related to the project
                  type: object
                  properties:
                    project_id:
                      description: Identifies the project associated with this secret
                      type: number
                    name:
                      description: Name of this secret
                      type: string
                    project_slug:
                      description: The "slug" of the associated project
                      type: string
                    value:
                      description: Plaintext value of this secret
                      type: string
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                      format: datetime
  '/projects/{id}/score-history':
    get:
      description: Retrieve the score history for a specific project.
      summary: Get Score History
      tags:
        - Project Scores
      parameters:
        - name: id
          in: path
          description: Project ID
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Score History Item
                  properties:
                    date:
                      description: The date of the score in ISO-8601 format
                      type: string
                    score:
                      description: The username of the user who acted on the project
                      type: number
              examples:
                records:
                  summary: Project score by day
                  value:
                    - date: 2021-03-01T00:00:00.000Z
                      score: 70
                    - date: 2021-03-12T00:00:00.000Z
                      score: 72
                    - date: 2021-04-01T00:00:00.000Z
                      score: 75
                    - date: 2021-05-21T00:00:00.000Z
                      score: 91
            application/msgpack:
              schema:
                type: array
                items:
                  type: object
                  description: Score History Item
                  properties:
                    date:
                      description: The date of the score in ISO-8601 format
                      type: string
                    score:
                      description: The username of the user who acted on the project
                      type: number
              examples:
                records:
                  summary: Project score by day
                  value:
                    - date: 2021-03-01T00:00:00.000Z
                      score: 70
                    - date: 2021-03-12T00:00:00.000Z
                      score: 72
                    - date: 2021-04-01T00:00:00.000Z
                      score: 75
                    - date: 2021-05-21T00:00:00.000Z
                      score: 91
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  '/projects/{id}/urls':
    get:
      description: Retrieve the collection of URLs for a project
      summary: Get Collection
      tags:
        - Project URLs
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project Link
                  description: Links related to the project
                  type: object
                  properties:
                    project_id:
                      description: The project ID
                      type: number
                    environment:
                      description: The environment the URL is for
                      type: string
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    url:
                      description: The URL
                      type: string
                      format: uri
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple group records
                  value:
                    - project_id: 1
                      environment: Production
                      created_by: test_user
                      last_modified_by: null
                      url: 'https://imbi.service.production.consul'
                    - project_id: 1
                      environment: Staging
                      created_by: test_user
                      last_modified_by: null
                      url: 'https://imbi.service.staging.consul'
                    - project_id: 1
                      environment: Testing
                      created_by: test_user
                      last_modified_by: null
                      url: 'https://imbi.service.testing.consul'
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project Link
                  description: Links related to the project
                  type: object
                  properties:
                    project_id:
                      description: The project ID
                      type: number
                    environment:
                      description: The environment the URL is for
                      type: string
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    url:
                      description: The URL
                      type: string
                      format: uri
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple group records
                  value:
                    - project_id: 1
                      environment: Production
                      created_by: test_user
                      last_modified_by: null
                      url: 'https://imbi.service.production.consul'
                    - project_id: 1
                      environment: Staging
                      created_by: test_user
                      last_modified_by: null
                      url: 'https://imbi.service.staging.consul'
                    - project_id: 1
                      environment: Testing
                      created_by: test_user
                      last_modified_by: null
                      url: 'https://imbi.service.testing.consul'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project URL record
      tags:
        - Project URLs
      requestBody:
        description: The project URL record to create
        content:
          application/json:
            schema:
              title: Project Link
              description: Links related to the project
              type: object
              properties:
                project_id:
                  description: The project surrogate ID
                  type: number
                environment:
                  description: The environment the URL is for
                  type: string
                url:
                  description: The URL
                  type: string
                  format: uri
              required:
                - project_id
                - environment
                - url
              additionalProperties: false
            examples:
              record:
                summary: A project URL record
                value:
                  project_id: 1
                  environment: Production
                  url: 'https://imbi.service.produciton.consul'
          application/msgpack:
            schema:
              $ref: '#/paths/~1projects~1%7Bid%7D~1urls/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A project URL record
                value:
                  project_id: 1
                  environment: Production
                  url: 'https://imbi.service.produciton.consul'
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project URL was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1components/get/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1urls/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A project URL record
                  value:
                    project_id: 1
                    created_by: test_user
                    last_modified_by: null
                    url: 'https://imbi.service.produciton.consul'
            application/msgpack:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1urls/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A project URL record
                  value:
                    project_id: 1
                    created_by: test_user
                    last_modified_by: null
                    url: 'https://imbi.service.produciton.consul'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    parameters:
      - name: id
        in: path
        description: The Project ID
        required: true
        schema:
          type: number
  '/projects/{id}/urls/{environment}':
    get:
      summary: Get Record
      description: Retrieve a project URL record
      tags:
        - Project URLs
      responses:
        '200':
          $ref: '#/paths/~1projects~1%7Bid%7D~1urls/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a project URL, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Project URLs
      requestBody:
        $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody'
      responses:
        '200':
          $ref: '#/paths/~1projects~1%7Bid%7D~1urls/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project URL record
      tags:
        - Project URLs
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1components/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Project ID for the URL
        required: true
        schema:
          type: number
      - name: environment
        in: path
        description: The environment the URL is for
        required: true
        schema:
          type: string
  /projects/build-search-index:
    post:
      summary: Index all projects
      description: Queue all projects to be added to the opensearch index
      tags:
        - Projects
      responses:
        '200':
          description: The request to index all projects was successful
          content:
            application/json:
              schema:
                title: Success
                description: How many project were queued for indexing
                type: object
                properties:
                  status:
                    description: Whether the operation succeeded
                    type: string
                  message:
                    description: How many projects were queued for indexing
                    type: string
            application/msgpack:
              schema:
                title: Success
                description: How many project were queued for indexing
                type: object
                properties:
                  status:
                    description: Whether the operation succeeded
                    type: string
                  message:
                    description: How many projects were queued for indexing
                    type: string
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  /reports/component-usage:
    get:
      description: Report of all defined components
      summary: Component Usage
      tags:
        - Reports
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Single component usage report
                  properties:
                    name:
                      description: Component name
                      type: string
                    package_url:
                      description: |
                        Unique identifier for the component following the
                        [purl spec](https://github.com/package-url/purl-spec)
                      type: string
                      pattern: '^pkg:'
                    active_version:
                      description: Optional semantic version range that is considered the "current" version
                      type: string
                      nullable: true
                    status:
                      description: Status for *all* versions of this component
                      type: string
                      enum:
                        - Active
                        - Deprecated
                        - Forbidden
                    project_count:
                      description: Number of projects using this component
                      type: number
                    version_count:
                      description: Number of known versions of this component
                      type: number
                  required:
                    - active_version
                    - name
                    - package_url
                    - project_count
                    - status
                    - version_count
                  example:
                    active_version: ~0.21
                    name: imbi
                    package_url: 'pkg:pypi:imbi'
                    status: Active
                    project_count: 1
                    version_count: 12
            application/msgpack:
              schema:
                type: array
                items:
                  type: object
                  description: Single component usage report
                  properties:
                    name:
                      description: Component name
                      type: string
                    package_url:
                      description: |
                        Unique identifier for the component following the
                        [purl spec](https://github.com/package-url/purl-spec)
                      type: string
                      pattern: '^pkg:'
                    active_version:
                      description: Optional semantic version range that is considered the "current" version
                      type: string
                      nullable: true
                    status:
                      description: Status for *all* versions of this component
                      type: string
                      enum:
                        - Active
                        - Deprecated
                        - Forbidden
                    project_count:
                      description: Number of projects using this component
                      type: number
                    version_count:
                      description: Number of known versions of this component
                      type: number
                  required:
                    - active_version
                    - name
                    - package_url
                    - project_count
                    - status
                    - version_count
                  example:
                    active_version: ~0.21
                    name: imbi
                    package_url: 'pkg:pypi:imbi'
                    status: Active
                    project_count: 1
                    version_count: 12
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  /reports/namespace-shs-history:
    get:
      description: The history of stack health scores for all namespaces for the last 12 months
      summary: Namespace SHS History
      tags:
        - Reports
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Namespace SHS Record
                  properties:
                    namespace_id:
                      description: The namespace ID value
                      type: number
                    scored_on:
                      description: The date of the `health_score` value
                      type: string
                    health_score:
                      description: The aggregate health score for the namespace
                      type: number
              examples:
                records:
                  summary: Stack health scores by namespace by day
                  value:
                    - namespace_id: 1
                      scored_on: 2021-01-01T00:00:00.000Z
                      health_score: 10.53
                    - namespace_id: 1
                      scored_on: 2021-02-01T00:00:00.000Z
                      health_score: 21.53
                    - namespace_id: 1
                      scored_on: 2021-03-01T00:00:00.000Z
                      health_score: 31.43
                    - namespace_id: 1
                      scored_on: 2021-04-01T00:00:00.000Z
                      health_score: 51.49
                    - namespace_id: 1
                      scored_on: 2021-05-01T00:00:00.000Z
                      health_score: 72.5
            application/msgpack:
              schema:
                type: array
                items:
                  type: object
                  description: Namespace SHS Record
                  properties:
                    namespace_id:
                      description: The namespace ID value
                      type: number
                    scored_on:
                      description: The date of the `health_score` value
                      type: string
                    health_score:
                      description: The aggregate health score for the namespace
                      type: number
              examples:
                records:
                  summary: Stack health scores by namespace by day
                  value:
                    - namespace_id: 1
                      scored_on: 2021-01-01T00:00:00.000Z
                      health_score: 10.53
                    - namespace_id: 1
                      scored_on: 2021-02-01T00:00:00.000Z
                      health_score: 21.53
                    - namespace_id: 1
                      scored_on: 2021-03-01T00:00:00.000Z
                      health_score: 31.43
                    - namespace_id: 1
                      scored_on: 2021-04-01T00:00:00.000Z
                      health_score: 51.49
                    - namespace_id: 1
                      scored_on: 2021-05-01T00:00:00.000Z
                      health_score: 72.5
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  /reports/system-shs-history:
    get:
      description: The system-wide Stack Health Score history for the last 12 months
      summary: System SHS Scores
      tags:
        - Reports
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: System-Wide SHS Record
                  properties:
                    scored_on:
                      description: The date of the `health_score` value
                      type: string
                    health_score:
                      description: The aggregate health score
                      type: number
              examples:
                records:
                  summary: System-wide stack health score by month
                  value:
                    - scored_on: 2021-01-01T00:00:00.000Z
                      health_score: 10.53
                    - scored_on: 2021-02-01T00:00:00.000Z
                      health_score: 21.53
                    - scored_on: 2021-03-01T00:00:00.000Z
                      health_score: 31.43
                    - scored_on: 2021-04-01T00:00:00.000Z
                      health_score: 51.49
                    - scored_on: 2021-05-01T00:00:00.000Z
                      health_score: 72.5
            application/msgpack:
              schema:
                type: array
                items:
                  type: object
                  description: System-Wide SHS Record
                  properties:
                    scored_on:
                      description: The date of the `health_score` value
                      type: string
                    health_score:
                      description: The aggregate health score
                      type: number
              examples:
                records:
                  summary: System-wide stack health score by month
                  value:
                    - scored_on: 2021-01-01T00:00:00.000Z
                      health_score: 10.53
                    - scored_on: 2021-02-01T00:00:00.000Z
                      health_score: 21.53
                    - scored_on: 2021-03-01T00:00:00.000Z
                      health_score: 31.43
                    - scored_on: 2021-04-01T00:00:00.000Z
                      health_score: 51.49
                    - scored_on: 2021-05-01T00:00:00.000Z
                      health_score: 72.5
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  /status:
    get:
      security: []
      description: Returns status / health information about the running service.
      summary: Service Status
      operationId: status
      tags:
        - Monitoring & Metrics
      responses:
        '200':
          description: Service Available
          content:
            application/json:
              schema:
                type: object
                properties:
                  started_at:
                    type: string
                    format: iso8601-timestamp
                    description: The ISO-8601 formatted timestamp of when the service started
                  status:
                    type: string
                    description: The current application status
                    enum:
                      - ok
                      - maintenance
                  version:
                    type: string
                    description: The version
              examples:
                record:
                  summary: Example when the service is available and processing requests
                  value:
                    started_at: 2020-01-01T00:00:00.000Z
                    status: ok
                    system:
                      language:
                        name: python
                        implementation: CPython
                        version: 3.7.6
                      os:
                        name: Alpine Linux
                        version: 3.11.6
                    version: '{{ settings["version"] }}'
            application/msgpack:
              schema:
                $ref: '#/paths/~1status/get/responses/200/content/application~1json/schema'
              examples:
                record:
                  summary: Example when the service is available and processing requests
                  value:
                    started_at: 2020-01-01T00:00:00.000Z
                    status: ok
                    system:
                      language:
                        name: python
                        implementation: CPython
                        version: 3.7.6
                      os:
                        name: Alpine Linux
                        version: 3.11.6
                    version: '{{ settings["version"] }}'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/paths/~1status/get/responses/200/content/application~1json/schema'
              examples:
                record:
                  summary: Example when the service is unavailable
                  value:
                    started_at: 2020-01-01T00:00:00.000Z
                    status: unavailable
                    system:
                      language:
                        name: python
                        implementation: CPython
                        version: 3.7.6
                      os:
                        name: Alpine Linux
                        version: 3.11.6
                    version: '{{ settings["version"] }}'
            application/msgpack:
              schema:
                $ref: '#/paths/~1status/get/responses/200/content/application~1json/schema'
              examples:
                record:
                  summary: Example when the service is unavailable
                  value:
                    started_at: 2020-01-01T00:00:00.000Z
                    status: unavailable
                    system:
                      language:
                        name: python
                        implementation: CPython
                        version: 3.7.6
                      os:
                        name: Alpine Linux
                        version: 3.11.6
                    version: '{{ settings["version"] }}'
  /ui/automations/gitlab/create:
    post:
      summary: Create GitLab Project
      description: |
        Create a new GitLab repository for a specific project.

        The GitLab parent namespace is calculated from the namespace configured in the parent Imbi group and the
        prefix configured in the project type.  If either value is not configured, then an error response is
        returned.
      tags:
        - Automations
      requestBody:
        description: Project details
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  description: Imbi project ID to create the repository for
                  type: integer
              required:
                - project_id
      responses:
        '200':
          description: GitLab repository was created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  gitlab_project_url:
                    type: string
                  gitlab_project_id:
                    type: integer
        '400':
          description: Request could not be processed
  /ui/automations/sentry/create:
    post:
      summary: Create Sentry Project
      description: Creates a new Sentry project using the info from the project.
      tags:
        - Automations
      requestBody:
        description: Project details
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  description: Imbi project ID to create the Sonarqube Project for
                  type: integer
              required:
                - project_id
      responses:
        '200':
          description: Sentry project was created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sentry_project_url:
                    type: string
                    format: url
tags:
  - name: Activity Feed
    description: Endpoints that detail changes to projects and other entities in Imbi
  - name: Automations
    description: Endpoints related to project automations
  - name: Components
    description: Endpoints for managing components and their usage in projects
  - name: Cookie Cutters
    description: Endpoints used for the management of project creation cookie cutters
  - name: Environments
    description: Endpoints used for the management different target environments for projects to run in.
  - name: Groups
    description: Endpoints used to manage the groups that Imbi users are able to be members of.
  - name: Namespaces
    description: Endpoints used for the management of organizational namespaces
  - name: Fact Types
    description: |-
      Management of records that define types facts that may be collected for a project.

      Project facts may be used to calculate a current project health score. For more
      information on project health score, see the compliance documentation.
    x-displayName: Project Fact Types
  - name: Fact Type Enums
    description: |-
      Management of records that define enum values for different fact types that may be collected for a project.

      Project facts enums provide the possible values for project facts, and are
      used to compute the score of that project fact. For more information on
      project health score, see the compliance documentation.
    x-displayName: Project Fact Type Enums
  - name: Fact Type Ranges
    description: |-
      Management of records that define range values for different fact types that
      may be collected for a project.

      Project facts ranges provide the possible range values for project facts, and
      are used to compute the score of that project fact. For more information on
      project health score, see the compliance documentation.
    x-displayName: Project Fact Type Ranges
  - name: Project Link Types
    description: Management of records that define types of links or URLs to associate with a project
  - name: Project Types
    description: 'Endpoints used for the management different types of projects managed in Imbi (APIs, Databases, etc)'
  - name: Projects
    description: Endpoints used for the management of projects
  - name: Project Activity Feed
    description: Endpoints that detail activity on a project
  - name: Project Configuration
    description: Endpoints to manage project configuration
  - name: Project Dependencies
    description: Endpoints used to manage the relationships of projects to other projects
  - name: Project Facts
    description: Endpoints for managing the current facts describing the project
  - name: Project Fact Types
    description: An endpoint for returning the project fact types for a specific project
  - name: Project Fact History
    description: Endpoint for returning the project fact history for a specific project
  - name: Project Links
    description: Endpoints used to manage links to external resources for a project
  - name: Project Notes
    description: Endpoints used to manage notes for a project
  - name: Project Scores
    description: Endpoints detailing information about project scores
  - name: Project URLs
    description: Endpoints used to manage urls to the project in each operational environment
  - name: Operations Log
    description: 'Endpoints used for created, querying, and managing entries in the Operations Log'
  - name: Reports
    description: Endpoints used to report on the state of various objects in Imbi
  - name: Settings
    description: Endpoints used for retrieving settings for the Imbi UI
  - name: Integrations
    description: Endpoints used to retrieve information about applications that Imbi is integrated with
  - name: Notifications
    description: Endpoints used for integrating Imbi with webhooks from other applications
  - name: Monitoring & Metrics
    description: 'Endpoints used for health checking, service status, and service metrics'
  - name: User
    description: Endpoints related to the current user
x-tagGroups:
  - name: Activity Feed
    tags:
      - Activity Feed
      - Project Activity Feed
  - name: Administration
    tags:
      - Groups
      - Users
  - name: Metadata
    tags:
      - Cookie Cutters
      - Environments
      - Namespaces
      - Fact Types
      - Fact Type Enums
      - Fact Type Ranges
      - Project Link Types
      - Project Types
  - name: Integrations
    tags:
      - Integrations
      - Notifications
      - Automations
  - name: Operations Log
    tags:
      - Operations Log
  - name: Project Management
    tags:
      - Components
      - Projects
      - Project Configuration
      - Project Dependencies
      - Project Facts
      - Project Fact Types
      - Project Fact History
      - Project Links
      - Project Notes
      - Project Scores
      - Project URLs
  - name: Reports
    tags:
      - Reports
  - name: Current User
    tags:
      - User
  - name: UI Specific
    tags:
      - Dashboard
      - Settings
  - name: Other
    tags:
      - Monitoring & Metrics
